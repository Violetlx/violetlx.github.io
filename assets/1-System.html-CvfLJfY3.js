import{_ as p,c as t,b as n,a as s,d as a,o as i}from"./app-B_5tQx1u.js";const m="/assets/image-20250704093210835-CxF6aUqs.png",e="/assets/image-20250704093543559-DBQzF0Jk.png",r="/assets/image-20250704093555399-CqQXywsc.png",c="/assets/image-20250704093608179-Dej8gYWM.png",o="/assets/image-20250704093628238-Dg8mCvcU.png",h="/assets/image-20250704093643558-B_JAf7Q8.png",g="/assets/image-20250704093711480-BqRnZWzu.png",u="/assets/image-20250704093727705-rn7q5Mly.png",d={};function y(v,l){return i(),t("div",null,l[0]||(l[0]=[n('<p><img src="https://artfiles.alphacoders.com/141/thumb-1920-141321.jpg" alt="Download Mahito (Jujutsu Kaisen) Anime Jujutsu Kaisen Art"></p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>一、绪论</p><p>二、进程管理</p><p>三、内存管理</p><p>四、文件管理</p><p>五、设备管理</p></div><h2 id="一、绪论" tabindex="-1"><a class="header-anchor" href="#一、绪论"><span>一、绪论</span></a></h2><p><strong>操作系统定义</strong>：负责管理计算机硬件资源，并为应用程序提供一个统一的接口</p><p><strong>操作系统功能</strong>：进程，存储，文件，设备，用户接口</p><p><strong>操作系统特性</strong>：并发，共享，虚拟，安全可靠，可扩展</p><p><img src="'+m+'" alt="image-20250704093210835"></p><ul><li>批处理阶段 <ul><li>单道批处理系统（新存储技术磁带引用）</li><li>多道批处理系统（读入多道程序，使用<strong>中断技术，操作系统，无人机交互功能</strong>，响应用户时间长）</li></ul></li><li>分时操作系统（以时间片轮询方式服务，<strong>有人机交互功能，不独占文件资源</strong>）</li><li>实时操作系统（在严格时间内完成）</li><li>按层次结构原则：计算机层次从内到外依次为：裸机、CPU调度、内存管理、<strong>设备管理、文件管理</strong>、作业管理、<strong>命令管理</strong>、用户。</li></ul><p><strong>系统调用</strong>：用户空间程序与内核进行交互。用于执行特权操作和访问受保护的系统资源。</p><ul><li><p>操作系统调用过程：</p><ol><li>传递系统调用参数</li><li>执行trap指令（陷阱指令，触发中断，将控制权从用户态转为内核态）</li><li>执行中断应用程序</li><li>返回结果，回复用户模式</li></ol></li></ul><p><strong>系统调用，库函数，内核函数关系</strong></p><ul><li>系统调用：用户与操作系统内核之间交互的接口（中断机制来切换到内核）</li><li>库函数：由程序调用，不是操作系统的一部分</li><li>API：API 通常是系统调用更高级别的抽象，不直接涉及操作系统内核</li><li>内核函数：硬件与操作系统之间交互（应用程序无法直接调用内核函数）</li></ul><p><strong>中断机制</strong>：用于暂停正在运行的进程并跳转到中断处理程序执行，<strong>中断不一定会进行目态管态切换</strong></p><ul><li><p>硬件中断（外中断）：中断信号来源于其他进程</p></li><li><p>异常中断（内中断）：中断信号来源于当前执行指令和CPU内部</p></li></ul><p>内核程序：中断处理程序，系统调用，进程调度程序，设备驱动程序，文件系统，时钟管理（计时功能），原语（设备驱动，CPU切换任务，接近硬件，具有原子性不能被中断）</p><p><strong>内核与微核对比</strong></p><ul><li>内核：集中式管理计算机硬件和软件资源。所有服务都在管态下运行，对硬件直接的访问，性能更高；内核中的任何错误或漏洞都可能使整个系统崩溃，难以扩展：添加新功能或修改现有功能需要修改内核代码</li><li>微核：将内核功能组件服务化，通过消息传递机制与多个微核交互，大多数服务运行在用户态，性能比内核低；可扩展性与模块化强</li></ul><h2 id="二、进程管理" tabindex="-1"><a class="header-anchor" href="#二、进程管理"><span>二、进程管理</span></a></h2><p>进程与作业关系：进程是已提交完毕的作业的执行过程，一个作业可以由多个进程构成</p><p>进程状态转换：创建，就绪，执行，阻塞，结束</p><p>进程控制：</p><ol><li><p>PSW（程序状态字）</p><ul><li>PC(程序计数器)：指向程序中当前正在执行的指令的内存地址</li><li>CPU状态码（标识处于管态还是目态）</li><li>中断屏蔽码</li><li>条件码（标志位）：记录最近执行指令的结果状态 <ol><li>ZF：零标志位</li><li>CF：进位</li><li>SF：符号标志</li><li>OF：出标志</li><li>PF：奇偶标志</li></ol></li></ul></li><li><p>阻塞与唤醒：一个进程由执行状态变为阻塞状态，是由这个进程自己调用阻塞原语去完成的；而进程由阻塞状态转变为就绪状态，则是由另一个发现者进程调用唤醒原语实现的</p></li><li><p>进程上下切换：</p><ul><li><p>保存处理及上下文，包括程序计数器和其他寄存器。</p></li><li><p>更新PCB信息。</p></li><li><p>把进程的PCB 移入相应队列，如就绪、某事件的阻塞队列等。</p></li><li><p>选择另一个进程执行，更新其PCB。</p></li><li><p>更新内存管理的数据结构。</p></li><li><p>恢复处理器上下文</p></li></ul></li><li><p>通信</p><ul><li><p>共享存储器</p></li><li><p>消息传递</p></li><li><p>管道通信</p></li></ul></li></ol><p>调度基本指标</p><ol><li><p>CPU利用率： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>利用率</mtext><mo>=</mo><mfrac><mtext>忙碌时间</mtext><mtext>总时间</mtext></mfrac></mrow><annotation encoding="application/x-tex">利用率= \\frac{忙碌时间}{总时间}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">利用率</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">总时间</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">忙碌时间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li><li><p>系统吞吐量：单位时间内完成任务数量（速度）</p></li><li><p>响应时间</p></li><li><p>周转时间：从提交到完成的时间间隔（<strong>等待时间+运行时间）</strong></p><ul><li><strong>开始时间 - 到达时间 = 等待时间</strong></li></ul></li><li><p><strong>带权周转时间：周转时间 / 运行时间</strong></p></li></ol><p>处理器调度</p><ul><li>作业调度（高级调度）</li><li>交换调度（中级调度）：内外存调用淘汰策略</li><li>进程调度（低级调度）</li></ul><p><strong>进程调度算法</strong></p><ul><li><p>非抢占式：\uFEFF\uFEFF将处理器分配给就绪队列中优先级最高的进程，该进程便会一直运行下去，直到由于其自身原因（任务完成或申请设备等）主动让出处理器时，才将处理器分配给另一个当前优先级最高的进程。</p><ol><li>FCFS（先来先服务）：对长任务作业（CPU繁忙作业）</li><li>SJDF（短作业优先）</li><li>优先级策略</li></ol></li><li><p>抢占式：在执行过程中进行优先级调度</p><ol><li>时间片轮转</li><li>高响应比：（作业等待时间+估计运行时间）/估计运行时间</li><li>多级队列调度及反馈</li></ol></li></ul><p><strong>同步与互斥</strong></p><ul><li><p>进程同步：进程之间能够按照某种顺序正确访问共享资源</p></li><li><p>进程互斥：进程不能同时访问共享资源</p></li><li><p><strong>同类进程相互互斥，不同类进行相互同步</strong></p></li><li><p>PV操作：s为可用资源数量</p><ol><li>P(s)： 申请资源，s = s -1，当s<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span></span></span></span> 0 该进程继续运行，否则停止等待</li><li>V(s)：释放资源，s=s+1，当 s <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> 0时，唤醒等待队列中的线程，并继续执行</li><li>进程同步：s为0，进程互斥s为1</li></ol></li></ul><p>互斥规则：</p><ol><li>空闲让进</li><li>忙则等待</li><li>有限等待</li><li>让权等待</li></ol><p><strong>进程同步模型</strong></p><ul><li>生产消费模型：生产者和消费者共用缓存区（锁），每次使用时检测缓存区是否为空，为空则消费者等待并唤醒生产者进行生产，缓存区满则生产者等待并唤醒消费者进行消费</li><li>读写模型：允许多个进程同时读取文件，并且只允许一个进程进行写操作，当写操作时，所有的读取操作会被阻塞，直到写入操作完成。</li></ul><p>管程：封装共享数据和同步方法</p><ul><li>局部于管程的数据只能被局部于管程内的过程所访问。</li><li>一个进程只有通过调用管程内的过程才能进入管程访问共享数据。</li><li>每次仅允许一个进程在管程内执行某个内部过程，即进程互斥地通过调用内部过有进入管程。其他想进入管程的过程必须等待，并阻塞在等待队列。</li></ul><p><strong>死锁</strong></p><p>死锁必要条件：</p><ul><li>互斥条件</li><li>不剥夺条件</li><li>请求与保持</li><li>环路等待</li></ul><p>死锁处理方法：</p><ul><li><p>预防死锁（设置限制条件，破坏死锁必要条件）</p></li><li><p>避免死锁（动态分配过程中设置资源分配算法，检测系统安全状态）</p><ol><li>系统安全状态检测：可用资源数量满足</li></ol></li><li><p>检测及解除死锁（已发生死锁情况下，剥夺死锁资源，或杀死进程）</p></li></ul><p>银行家算法：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mi>e</mi><mi>e</mi><mi>d</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>M</mi><mi>a</mi><mi>x</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>−</mo><mi>A</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex"> Need[i][j] = Max[i][j] - Allocation[i][j] </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">ee</span><span class="mord mathnormal">d</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mord mathnormal">oc</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span></span></p>',43),s("ul",null,[s("li",null,[s("p",null,[a("i：第"),s("code",null,"i"),a("进程数")])]),s("li",null,[s("p",null,[a("j：第"),s("code",null,"j"),a("类资源")])]),s("li",null,[s("p",null,"Need：当前进程需要资源量")]),s("li",null,[s("p",null,"Max：当前进程最大需要资源量")]),s("li",null,[s("p",null,"Allocation：当前进程可分配资源量")]),s("li",null,[s("p",null,"Available：空闲资源数量")]),s("li",null,[s("p",null,"Request：当前线程请求资源数量")]),s("li",null,[s("p",null,"算法"),s("ol",null,[s("li",null,[s("p",null,"Request <=Need数量，否则报错")]),s("li",null,[s("p",null,"Request <= Available，否则当前进程等待")]),s("li",null,[s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"A"),s("mi",null,"v"),s("mi",null,"a"),s("mi",null,"i"),s("mi",null,"l"),s("mi",null,"a"),s("mi",null,"b"),s("mi",null,"l"),s("mi",null,"e"),s("mo",null,"="),s("mi",null,"A"),s("mi",null,"v"),s("mi",null,"a"),s("mi",null,"i"),s("mi",null,"l"),s("mi",null,"a"),s("mi",null,"b"),s("mi",null,"l"),s("mi",null,"e"),s("mo",null,"−"),s("mi",null,"R"),s("mi",null,"e"),s("mi",null,"q"),s("mi",null,"u"),s("mi",null,"e"),s("mi",null,"s"),s("mi",null,"t"),s("mspace",{linebreak:"newline"}),s("mi",null,"A"),s("mi",null,"l"),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"c"),s("mi",null,"a"),s("mi",null,"t"),s("mi",null,"i"),s("mi",null,"o"),s("mi",null,"n"),s("mo",null,"+"),s("mo",null,"="),s("mi",null,"A"),s("mi",null,"l"),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"c"),s("mi",null,"a"),s("mi",null,"t"),s("mi",null,"i"),s("mi",null,"o"),s("mi",null,"n"),s("mo",null,"+"),s("mi",null,"R"),s("mi",null,"e"),s("mi",null,"q"),s("mi",null,"u"),s("mi",null,"e"),s("mi",null,"s"),s("mi",null,"t"),s("mspace",{linebreak:"newline"}),s("mi",null,"N"),s("mi",null,"e"),s("mi",null,"e"),s("mi",null,"d"),s("mo",null,"="),s("mi",null,"N"),s("mi",null,"e"),s("mi",null,"e"),s("mi",null,"d"),s("mo",null,"−"),s("mi",null,"R"),s("mi",null,"e"),s("mi",null,"q"),s("mi",null,"u"),s("mi",null,"e"),s("mi",null,"s"),s("mi",null,"t")]),s("annotation",{encoding:"application/x-tex"}," Available = Available - Request \\\\Allocation + = Allocation + Request \\\\ Need = Need - Request ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mord mathnormal"},"ai"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"ab"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mord mathnormal"},"ai"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"ab"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"es"),s("span",{class:"mord mathnormal"},"t")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll"),s("span",{class:"mord mathnormal"},"oc"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll"),s("span",{class:"mord mathnormal"},"oc"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"es"),s("span",{class:"mord mathnormal"},"t")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal"},"ee"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal"},"ee"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"es"),s("span",{class:"mord mathnormal"},"t")])])])])])]),s("li",null,[s("p",null,"检测系统安全状态")]),s("li",null,[s("p",null,"确定分配")])])])],-1),n('<p>资源分配图：</p><ol><li>二元序列表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>P</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>2</mn></msub><mo>&gt;</mo><mtext>表示</mtext><msub><mi>P</mi><mn>1</mn></msub><mtext>正在申请</mtext><msub><mi>r</mi><mn>2</mn></msub><mtext>资源，</mtext><mo>&lt;</mo><msub><mi>r</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mtext>表示</mtext><msub><mi>P</mi><mn>1</mn></msub><mtext>占有</mtext><msub><mi>r</mi><mn>1</mn></msub><mtext>资源</mtext></mrow><annotation encoding="application/x-tex">&lt;P_1,r_2&gt; 表示 P_1正在申请r_2资源，&lt;r_1,P_1)表示P_1占有r_1资源</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">表示</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">正在申请</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">资源，</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">表示</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">占有</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">资源</span></span></span></span></li></ol><h2 id="三、内存管理" tabindex="-1"><a class="header-anchor" href="#三、内存管理"><span>三、内存管理</span></a></h2><p>物理地址：内存中实际存储单元地址</p><p>逻辑地址：（相对地址）：指令地址</p><p>编译：将告警语言翻译为机器语言</p><p>装载：将程序从外存载入内存中运行</p><p>装载方式：</p><ul><li><blockquote><p>绝对装入（编译时产生物理地址的指令）</p></blockquote></li><li><p>静态重定位（依据当前内存情况，将<strong>相对地址重定位到物理地址</strong>，作业进入内存，在运行期间不能移动）</p></li><li><p><strong>动态重定位</strong>（将地址转换推迟到程序执行时进行，CPU进行转换）</p></li></ul><p>内存保护：</p><ul><li><p>界限寄存器：上下界存储器及基址限长保护器</p></li><li><p>存储保护键</p></li></ul><p>内存空间扩充（有限的内存空间中运行大型程序）</p><ul><li><p>覆盖：将不同程序或数据段加载到同一个内存地址</p><p><img src="'+e+'" alt="image-20250704093543559"></p></li><li><p>交换：内外存调度</p></li></ul><p><strong>内存空间分配</strong></p><p><img src="'+r+'" alt="image-20250704093555399"></p><ul><li><p>连续分配</p><ol><li>单一连续分配：用户进程独占用户区且只能有一道程序运行，无内存碎片，存储器利用低</li><li>固定分区分配：等额切分内存，并建立分区说明表（分区大小，起始位置，状态）</li><li>可变分区：不预先划分内存空间，根据进程的大小动态建立分区（分区的大小正好合适进程的需要，无内部碎片） <ul><li><img src="'+c+'" alt="image-20250704093608179"></li></ul></li></ol></li><li><p>非连续分配</p><ol><li><p>分页存储：将内存空间分为一个大小相等的分区，页/物理块：程序的逻辑空间和内存分为一些大小相同的片段，页表：记录页与物理块地址映射关系</p></li><li><p>分段存储管理方式：按照程序自身逻辑关系划分为若干个段，每个段大小不同，且不连续</p></li><li><p>段页式存储管理方式：将内存先分段，在段中在进行分页</p><p>地址计算：首先根据段号查找段表，获取段的起始地址和长度，将逻辑地址中的偏移量转换为页号和页内偏移量</p></li></ol></li></ul><p>页式存储管理：页式内存管理提供灵活的内存分配和回收，支持程序动态调整，但会增加访问延迟，可能导致碎片化，并限制内存分配粒度</p><p>段式存储管理：内存组织灵活，可按逻辑段组织，便于代码共享，但管理复杂，需要维护段表。</p><p>段页式存储管理优点：</p><ul><li>段的大小可以动态调整，适应不同程序的需求，避免了内存碎片问题</li><li>段有独立保护机制，可以设置不同的访问权限，增强了系统的安全性</li><li>通过分页机制实现了虚拟内存，提高了内存的利用率和管理效率</li></ul><p><strong>虚拟内存概念</strong>：允许程序使用比物理内存更大的地址空间</p><ul><li><p>局部性原理：程序在短时间内倾向于访问同一区域的内存地址</p><ol><li>时间局部性: 如果一个数据项被访问过，那么它在不久的将来很可能再次被访问</li><li>空间局部性: 如果一个数据项被访问过，那么它附近的内存地址很可能在不久的将来被访问</li></ol></li><li><p><strong>页面置换算法</strong></p><ol><li><p>OPT（最佳置换算法）</p></li><li><p>FIFO（先进先出）</p></li><li><p>LRU（最近最久未使用）</p></li><li><p>CLOCK（时钟置换，最近未使用）</p><p>使用循环队列管理页面，定期替换未访问的页面，并重置已访问页面的访问状态</p></li></ol><p><img src="'+o+'" alt="image-20250704093628238"></p></li></ul><p>**工作集与页面分配策略：**操作系统如何将物理内存分配给进程的页面。</p><p><img src="'+h+'" alt="image-20250704093643558"></p><ul><li><p>工作集：进程在一段时间内频繁访问的页面集合</p><ol><li>工作集的大小取决于进程的活动状态。</li><li>为了提高程序效率，工作集中的页面应常驻内存，减少页面置换。</li></ol></li><li><p>调度时机</p><ol><li><p>缺页调度</p></li><li><p>预先分页：操作系统预先将程序的一部分页面加载到内存中</p></li><li><p>预测分页</p></li><li><p>工作集：将最近访问的页面，保留在内存中</p></li></ol></li><li><p>Belady：增加内存容量反而会导致页面失效次数增加（FIFO算法）</p></li><li><p>内存抖动：页面频繁调度，导致应用程序性能下降（原因是程序不完全加载进内存）</p></li></ul><h2 id="四、文件管理" tabindex="-1"><a class="header-anchor" href="#四、文件管理"><span>四、文件管理</span></a></h2><p>文件结构：</p><ol><li><p>流式文件：文件内部数据由二进制流或字符组成（流式文件），文件数据没有明显的结构特性</p></li><li><p>记录文件：由一组相似的记录组成，每条记录有为若干个数据项</p><p>逻辑结构：</p><p><img src="'+g+'" alt="image-20250704093711480"></p><p>索引文件：用于快速定位和访问文件数据（直接访问且不产生碎片，索引块占用额外空间）</p><ul><li>索引结构：顺序，哈希，B树，倒排</li><li>层级索引 <ol><li>单级索引：文件最大长度= 盘块大小<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span> 块数量（盘块 大小 / 索引表项大小）</li><li>二级索引：文件最大长度 = 盘块大小 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span> 一级块数量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span>​ 二级块数量</li></ol></li></ul></li></ol><p><strong>文件目录</strong>：</p><ol><li><p>文件控制块：操作系统用来管理和访问文件的数据结构，包含文件名、物理地址、文件结构信息、访问权限、用户和时间信息</p></li><li><p>目录结构：</p><ul><li><p>单级目录</p></li><li><p>二级目录：MFD：文件系统中的根目录，它包含所有用户文件目录的入口，UFD：用户的文件目录</p></li><li><p>多级目录（树形目录）</p></li></ul></li><li><p>文件共享</p><ul><li>基于索引节点共享（硬链接）：不同的FCB指针指向同一个文件地址（异名共享，FCB引用时删除）</li><li>基于符号链接共享（软链接）：文件存储指向目标文件的路径</li></ul></li><li><p>文件保护：访问控制矩阵，用户权限表，口令与密码</p></li></ol><p>文件存储空间</p><ul><li><strong>空闲表法：</strong> 记录空闲块的起始位置和空闲块数（连续分配方式）</li><li>空闲盘块链（离散分配）</li><li>位示图法（使用二进制位对应磁盘块，0代表磁盘空闲，1表示磁盘被分配）</li></ul><p><strong>磁盘结构</strong></p><p><img src="'+u+'" alt="image-20250704093727705"></p><ul><li><p>磁盘访问时间 = 寻道时间 + 旋转延迟 + 传输时间</p><ul><li><p>寻道时间：磁头冲当前磁道移动到目标磁道消耗时间（调度算法优化项）</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>=</mo><mi>m</mi><mo>×</mo><mi>n</mi><mo>+</mo><mi>s</mi></mrow><annotation encoding="application/x-tex">T_s = m \\times n + s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span> s：启动磁臂时间</p></li><li><p>旋转延迟：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>r</mi></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>r</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">T_r = \\frac{1}{2r}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> r：磁盘转速</p></li><li><p>传输时间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>t</mi></msub><mo>=</mo><mfrac><mi>b</mi><mrow><mi>r</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">T_t = \\frac{b}{rN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> b：每次读写字节数，N：磁道上字节数</p></li></ul></li><li><p>磁盘调度算法：</p><ol><li>FCFS：先来先服务</li><li>SSTF：优先处理距离当前磁头进的磁道，保证每次寻道的时间最短</li><li>SCAN：选择下一个最近的请求，并且该请求位于磁头当前移动方向上</li><li>C-SCAN：SCAN改进</li><li>平均寻道长度：平均寻道长度 = (所有寻道距离之和) / (寻道次数)</li></ol></li></ul><p><strong>RAID技术</strong>：独立磁盘冗余阵列，提高数据可靠性、可用性和性能</p><ul><li>RAID0：数据被分成多个块并分别存储在不同的硬盘上，可以提高读写性能，读写速度最快，无数据冗余</li><li>RAID1：数据被完全复制到另一个硬盘上，提供了数据冗余，实际可用容量为所有磁盘容量的一半</li><li><strong>RAID 5</strong>：数据和校验信息交替存储在多个磁盘上，提供了数据冗余和性能</li></ul><h2 id="五、设备管理" tabindex="-1"><a class="header-anchor" href="#五、设备管理"><span>五、设备管理</span></a></h2><ul><li><p>块设备（物理块为交换单位，可寻址，可随机读写）</p></li><li><p>字符设备（以字符为单位交换，<strong>不可寻址</strong>，采用中断驱动方式）</p></li></ul><p>设备控制方式</p><ol><li><p>直接程序控制（简单实现，效率低）</p></li><li><p>中断控制</p></li><li><p>DMA控制（直接内存访问，无需CPU介入，需要DMA硬件控制器）</p></li><li><p>IO通道方式（同DMA，一个通道控制多台设备）</p><p>字节多路：多个低速设备共享一个串行通信接口。</p><p>数组选择：多个高速设备共享一个并行通信接口（占用通道）</p><p>数组多路选择</p></li></ol><p>IO软件层次结构</p><ol><li>硬件</li><li>设备独立层：命名，保护，阻塞，缓冲，分配</li><li>设备驱动程序层：建立设备寄存器，检测状态</li><li>中断处理：设备触发事件响应</li><li>用户软件层</li></ol>',43)]))}const b=p(d,[["render",y]]),w=JSON.parse('{"path":"/docs/Computer/Computer/1_System/1-System.html","title":"操作系统","lang":"en-US","frontmatter":{"title":"操作系统","date":"2025/07/04"},"headers":[{"level":2,"title":"一、绪论","slug":"一、绪论","link":"#一、绪论","children":[]},{"level":2,"title":"二、进程管理","slug":"二、进程管理","link":"#二、进程管理","children":[]},{"level":2,"title":"三、内存管理","slug":"三、内存管理","link":"#三、内存管理","children":[]},{"level":2,"title":"四、文件管理","slug":"四、文件管理","link":"#四、文件管理","children":[]},{"level":2,"title":"五、设备管理","slug":"五、设备管理","link":"#五、设备管理","children":[]}],"filePathRelative":"docs/Computer/Computer/1_System/1-System.md","git":{"createdTime":1751536576000,"updatedTime":1753152430000,"contributors":[{"name":"lixuan","email":"2789968443@qq.com","commits":3}]}}');export{b as comp,w as data};
