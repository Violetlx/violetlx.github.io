import{_ as a,c as l,b as p,o as i}from"./app-C7pp65Rl.js";const n="/assets/image-20231008213319623-Bw6TEWzL.png",t="/assets/image-20221009165735723-B3vPfyoV.png",m="/assets/image-20221009173426713-ltRVgLVR.png",e="/assets/image-20231018171020240-BGVpgUV6.png",r="/assets/image-20231019114935492-73lNh6Xm.png",o="/assets/image-20231019104123572-CIyuzKp_.png",c="/assets/image-20231019104153408-YE_IBI76.png",h={};function g(d,s){return i(),l("div",null,s[0]||(s[0]=[p('<p><img src="https://artfiles.alphacoders.com/121/thumb-1920-121959.jpg" alt="Download Wings Blue Hair Fitoria (The Rising Of The Shield Hero) Anime The Rising Of The Shield Hero Art"></p><h2 id="基础" tabindex="-1"><a class="header-anchor" href="#基础"><span>基础</span></a></h2><ul><li><p>磁盘调度</p><ol><li><p>先来先服务</p></li><li><p>最短寻找优先（最短移臂调度算法）：优先访问当前磁头最近柱面</p></li><li><p>电梯调度：优先访问当前磁头最近一侧柱面</p></li><li><p>单向扫描：只向一侧扫描柱面</p></li></ol></li><li><p>RAID磁盘阵列</p><ol><li>RAID0：磁盘利用率100%，速度最快，无数据冗余，无数据修复</li></ol></li></ul><ol start="2"><li>RAID1：磁盘利用率50%，完全镜像，数据安全强</li><li>RAID5：至少3块以上奇数硬盘，允许单盘故障，<strong>磁盘利用率 (N-1) / N</strong></li></ol><ul><li><p>磁盘调度时间</p><ol><li>寻道时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>s</mi><mo>=</mo><mi>s</mi><mo>+</mo><mi>m</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">Ts = s + m \\times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> ，s：启动磁头臂时间，m单个磁道时间，横跨n条磁道</li><li>延迟时间（转动磁盘时间，从磁头定位到目标扇区时间）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>r</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mi>r</mi></mrow><annotation encoding="application/x-tex">Tr = 1/2r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> r：磁盘转速</li><li>传输时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>t</mi><mo>=</mo><mfrac><mi>b</mi><mrow><mi>r</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Tt = \\frac{b}{rN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">Tt</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>， b：每次读写字节数，N：每个磁道字节数，r： 磁盘转速</li><li>磁盘读取时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>a</mi><mo>=</mo><mi>T</mi><mi>s</mi><mo>+</mo><mi>T</mi><mi>r</mi><mo>+</mo><mi>T</mi><mi>b</mi><mo>=</mo><mi>T</mi><mi>s</mi><mo>+</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>r</mi></mrow></mfrac><mo>+</mo><mfrac><mi>b</mi><mrow><mi>r</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Ta = Ts + Tr + Tb = Ts + \\frac{1}{2r} + \\frac{b}{rN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ol></li><li><p>串行，并行，同步，异步</p><ol><li>串行：单个比特位传输，速率低，可靠性高，适合远距离，可控制速率。</li><li>并行：数据同时传输多个位，速度快，费用高，适合近距离。</li><li>同步，异步：收发方保持时钟同步，以确保数据的传输准确性</li></ol></li><li><p>CPU</p><ol><li><p>CPU外频（系统总线频率）$\\times $ 倍频 = 主频</p></li><li><p>运算器：ALU：算术逻辑单元，AC：累加寄存器（运算结果或源操作数据的存放区域)，DR：数据缓冲寄存器（内存指令或数据），PSW：状态条件寄存器（程序中断时数据）</p></li><li><p>控制器：IR：指令寄存器，PC：程序计数器（存放指令执行地址），AR：地址寄存器（CPU访问的内存地址），ID：指令译码器</p></li><li><p>体系架构</p><ul><li><p>冯·诺依曼（X86，X64）：指令和数据统一编址，共享同一个存储器，CPU取址与操作无法叠加</p><blockquote><p>同时传输数据和指令，导致存储器和处理器之间的效率低下</p><p>指令和数据被混合存储，程序可以动态地修改自身代码，容易受到恶意程序攻击</p><p>指令和数据必须具有相同的位宽</p></blockquote></li><li><p>哈佛结构（DSP，ARM）：指令与数据分开编址，使用不同的存储器，CPU取址与操作叠加</p><blockquote><p>应用于嵌入式系统或数字信号处理器，有较高的可靠性、运算速度和较大的吞吐量</p></blockquote></li></ul></li></ol></li><li><p>CRC循环冗余校验码</p><ol><li>多项式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>X</mi><mn>5</mn></msup><mo>+</mo><msup><mi>X</mi><mn>3</mn></msup><mo>+</mo><mi>X</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">G(x) = X^5+X^3+X+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 表示二进制 101011 （首尾必须为1 ）</li><li>FCS = 数据 % 多项式</li><li>发送数据 = 数据 + FCS</li></ol></li><li><p>流水线指令计算</p><ol><li><p>流水线周期：其中最长执行时间为该流水线周期</p></li><li><p>流水线执行时间：步骤总执行时间 + (总指令条数 -1 ) * 流水线周期</p></li><li><p>流水线吞吐率（单位时间执行指令条数）： 指令条数 / 流水线执行时间</p></li><li><p>流水线加速比 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mtext>不使用流水线时间</mtext><mtext>流水线执行时间</mtext></mfrac></mrow><annotation encoding="application/x-tex">\\frac{不使用流水线时间}{流水线执行时间}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">流水线执行时间</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">不使用流水线时间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li></ol></li><li><p>RISC与CISC</p><p><img src="'+n+'" alt="image-20231008213319623"></p></li><li><p>宏内核与微内核</p><ol><li>宏内核：拥有硬件的所有控制权，高性能，代码庞大，结构混乱，难以维护，程序资源通过操作系统分配（内核调用），内核崩溃程序无法运行（必须重启）</li><li>微内核：内核功能少，结构清晰，方便维护，性能低（管态与目态上下文切换），用户程序可以调用内核API，无需经过操作系统</li></ol></li><li><p>内存地址转换</p><ol><li><p>全相联映像：块冲突低最低，空间利用率最高，块表容量过大，转换速度慢，适合容量小的Cache</p><p>主存地址 = 块号 + 块内地址</p><p>Cache地址 = 行号 + 行内地址</p><p>块表容量 = Cache行号 * 主存块号位数</p></li><li><p>直接映像：块冲突高，直接映射方式一般用于大容量的cache中</p><p><img src="'+t+'" alt="images/1-Framework/image-20221009165735723.png"></p><ul><li>主存块号 j，与Cache行号<code>i</code>映射关系为 i = j mod <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">2^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">2^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span> 为Cache块数，s-m为主存标记位长度</li><li>块表长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">2^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span> ， 块表容量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>m</mi></msup><mo>×</mo><mo stretchy="false">(</mo><mi>s</mi><mo>−</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2^m \\times (s-m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></li></ul></li><li><p>组相联映像：减少块冲突概率</p><p><img src="'+m+'" alt="images/1-Framework/image-20221009173426713.png"></p><ul><li>主存块号<code>j</code>与Cache组号<code>q</code>映射关系为 q = j mod <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">2^d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></li></ul></li></ol></li><li><p>锁资源分配</p><ol><li><p>PV操作：P申请资源，V释放资源 ，当S &gt; 0 时，P，V操作可执行</p></li><li><p>前趋图：执行前申请资源（入度），执行后释放资源（出度）</p></li><li><p>死锁</p><ul><li>死锁预防：破坏死锁产生的条件</li><li>死锁避免：合理分配进程资源</li><li>死锁检测</li><li>死锁解除</li><li><em><em>死锁资源计算：发生死锁最大资源为 n</em>（R-1），不发发生死锁最小资源 n * (R-1)+1</em>*</li></ul></li></ol></li><li><p>文件</p><ol><li><p>无结构文件（流式文件）</p><ul><li>以字节为单位，管理简单，适合源程序文件、目标代码文件</li></ul></li><li><p>有结构文件（记录文件）</p><ul><li><p>顺序排列，存在链表或索引记录</p></li><li><p>不适合经常需要查找、修改或删除单个记录的场合</p></li><li><p>索引文件 （字 &gt; 字节(Byte) &gt; 位(B)）</p><blockquote><p>直接索引表单个文件最大长度 = 个数 * 数据块大小</p><p>一级索引地址页表项 = 数据块 / 地址项大小</p><p>一级索引地址长度 = 页表项（个数） * 数据块大小</p><p>二级索引索引页表项 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>页表</mtext><msup><mtext>项</mtext><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">页表项^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord cjk_fallback">页表</span><span class="mord"><span class="mord cjk_fallback">项</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>二级索引地址长度 = 页表项（个数） * 数据块大小</p></blockquote></li></ul></li></ol></li><li><p>数据库三级模式</p><ol><li><p>概念模式：描述数据与现实实体关联，约束（一个数据库只有一个概念模式）</p></li><li><p>外模式（用户模式）：描述用户看到或使用的数据的逻辑结构（一个数据库可以有多个外模式。一个应用程序只能使用一个外模式）</p></li><li><p>内模式：存储记录类型，存储域，索引，存储路径模式（个数据库只有一个内模式）</p></li></ol></li><li><p>关系模式 R(U，F)</p><ol><li>R表示关系全局，U表示关系元素，F表示关系函数</li><li>自反性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>x</mi><mo separator="true">,</mo><mi>x</mi><mo>&gt;</mo><mo>∈</mo><mi>R</mi><mo stretchy="false">(</mo><mi>x</mi><mi>R</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">&lt;x,x&gt; \\in R (xRx)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，对称性 &lt;x,y&gt; &amp; &lt;y,x&gt; <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span> R，传递性&lt;x,y&gt; &amp; &lt;y,z&gt; &amp; &lt;x,z&gt; <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span> R</li><li>蕴含： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>→</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">P \\to Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span> 为永真时（因果逻辑），P蕴含Q 记作 P<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇒</span></span></span></span>Q <ul><li>$Y \\sube X \\sube U，X \\to Y ,则为F的逻辑蕴含 $</li><li>...</li></ul></li></ol></li><li><p>数据库二阶段提交</p><ol><li>第一阶段（表决）：所有参与事务的节点向事务管理器发送当前数据状态消息</li><li>提交阶段：事务管理器根据收到的状态消息决定回滚或提交</li></ol></li><li><p>数据库3NF</p><ol><li><p>1NF：无重复的列，且每一列不可分割的原子属性</p></li><li><p>2NF：实体的其他属性完全依赖主键（单表中不存在两个有联系的主体字段，消除数据冗余）</p></li><li><p>3NF：不包含其它关系已包含的非主键信息（单表中不存在其他表中非主键的字段，消除数据冗余）</p></li><li><p>反规范化技术：</p><ul><li><p>增加冗余列</p></li><li><p>增加派生列</p></li><li><p>重新组表</p></li><li><p>水平分割表</p></li><li><p>垂直分割表</p></li></ul></li></ol></li><li><p>芯片</p><ol><li><p>Soc：系统级芯片（微处理器，包含硬件与嵌入式软件）</p></li><li><p>MCU：微控制单元（单片机）</p></li><li><p>BSP：硬件抽象层（HAL）与硬件，操作系统相关（操作系统引导程序）</p></li><li><p>DSP：信号处理技术（实现数字信号处理技术的芯片）</p></li><li><p>AI芯片：新型计算范式（矩阵乘法和加法），信号处理，低精度设计，专用开发工具</p><blockquote><p>AI芯片技术架构</p><ul><li>GPU：价格，功耗过高</li><li>FPGA：可编程门阵列</li><li>ASIC：专用集成电路</li></ul></blockquote></li></ol></li><li><p>系统</p><ol><li>RTOS：实时操作系统：系统能及时响应外部事件的要求，在规定时间内调度一切可利用资源完成任务</li><li>BPOS：批处理系统：资源利用率高，系统吞吐量大，但缺乏交互能力</li><li>TSOS：分时系统：以时间片方式服务（Linux，Window，Mac）</li><li>嵌入式操作系统：内核小，专用性强，系统精简，高实时性，多任务操作</li></ol></li><li><p>常见网络应用协议及端口</p><table><thead><tr><th>协议</th><th>服务</th><th>端口</th></tr></thead><tbody><tr><td>FTP</td><td>文件传输协议（数据）（控制）</td><td>20/21</td></tr><tr><td>Telnet</td><td>Telnet终端仿真</td><td>23</td></tr><tr><td>DHCP</td><td>动态主机配置协议 C/S</td><td>67/68</td></tr><tr><td>SMTP</td><td>简单邮件发送协议</td><td>25</td></tr><tr><td>POP3/IMAP</td><td>邮件接收协议（POP3本地操作可见）</td><td>POP3：110/995<br>IMAP：143/993</td></tr><tr><td>DNS</td><td>域名服务</td><td>53</td></tr><tr><td>SSL/TLS</td><td>安全套接层/传输层安全性</td><td>443</td></tr><tr><td>SSH</td><td>安全外壳协议</td><td>22</td></tr></tbody></table></li><li><p>无线传输加密算法</p><ol><li>WEP：RC4算法 + CRC-32 传输</li><li>WPA：</li><li>WPA2</li></ol></li><li><p>DNS请求过程</p><ol><li><p>查询本机DNS缓存，获取主机对应IP地址</p></li><li><p>发起DNS请求，获取主机对应IP地址</p><blockquote><p>递归查询：由根域名服务递归子服务器返回IP（影响性能）</p><p>迭代查询：由客户端依次迭代查询子域名服务器</p></blockquote></li><li><p>使用IP地址向目标服务器建立TCP连接</p></li></ol></li><li><p>DHCP请求过程</p><ol><li><strong>入网主机广播方式</strong>(255.255.255.255)发送discover报文，寻找DHCP服务器</li><li>DHCP服务器收到discover报文，选出一个可用地址包装成 offer报文返回入网主机</li><li>入网主机只接收第一个收达offer报文，并再次以广播方式发送request确定当前使用IP</li><li>DHCP服务器接收到request，再返回ACK报文确定该IP已分配入网主机</li></ol></li><li><p>IPV6</p><ol><li><p>地址长度128位，16位一段，分为8段，每段使用16进制表示（IPv4 32位）</p></li><li><p><strong>灵活，简化报文头部IP报文头部格式</strong></p></li><li><p>单播，组播，泛播（广播到所有子网）</p></li></ol></li><li><p>网络分层设计</p><ol><li>核心：冗余能力、可靠性和高速的传输（链路聚合、IP路由，IP组播）</li><li>汇聚：交换速率，高性能，低接入（路由选择、分组过滤、组播管理、QoS服务质量、负载均衡）</li><li>接入：低成本，高端口密度（接入与认证、QoS、MAC地址过滤</li></ol></li><li><p>霍尔三维结构</p><ol><li>逻辑，时间，知识</li></ol></li><li><p>测试方法</p><ol><li><p>静态（代码走查，代码评审，桌查）</p></li><li><p>动态（白盒，黑盒，性能）</p><blockquote><p>单元测试</p><p>冒烟测试：选择基础用例进行验证，确保全流程没有严重，阻塞性问题</p><p>集成测试：依据概要设计文档，依次测试各个模块功能</p><p>回归测试：软件变更后，对变更相关的内容进行测试</p><p>确认测试：验证软件是否符合用户需求（黑盒测试）</p><ul><li>等价类划分：输入条件划分为有效范围和无效范围</li><li>边界值分析：边界参数进行测试</li><li>因果图与判定表：输入条件的等价类组合关系，写出判定表</li><li>错误推测：根据经验或直觉推测程序中可能存在的各种错误</li></ul><p>白盒测试：程序每条语句都执行一次进行测试</p><p>验收测试：包含项目资料文档，功能，性能，安装，用户培训测试</p><p>a&amp;b测试：Alpha：模拟环境下测试，Beta：实际环境下进行测试</p></blockquote></li></ol></li><li><p>系统指标测试方法</p><ol><li>常用方法：通过计算机指标判断（CPU时钟，指令执行速度，综合理论性能等），评估性能差异较大</li><li>BMT基准测试：最常用，最核心的功能进行测试作为整体性能指标（浮点，整数，SPEC，TPC测试）</li><li>负载测试：测试超负荷环境中程序运行情况</li><li>强度测试：系统资源低情况下软件运行情况</li><li>容量测试：系统能容量用户数量</li></ol></li><li><p>测试脚本</p><ol><li>线性脚本：手工测试用例时得到脚本</li><li>结构化脚本：具有逻辑结构和函数调用功能</li><li>共享脚本：可以被多个测试用例使用</li><li>数据驱动脚本：存储在独立的数据文件中</li></ol></li><li><p>企业数据化转型发展</p><ol><li>数字化技术：人工智能、大数据、云计算实现业务流程的自动化和优化，提高效率和准确性</li><li>创新业务模式：共享经济、平台经济等，来拓展市场和增加收入来源</li><li>数据管理：数据分析能力提高决策的准确性和速度</li><li>数字化文化</li></ol></li><li><p>电子政务</p><ol><li>G2G：政府机构之间信息系统（人口采集等）</li><li>G2B：政府与企业之间的信息系统（政策，法规，行政规定，营业执照，许可证，质量认证）</li><li>G2C：政府与居民之间的信息系统（户口，个人证件，医院，学校，图书馆，公园）</li><li>B2G：企业税收系统</li><li>C2G：个人税收系统（报警，罚款）</li></ol></li><li><p>电子商务（不包含政府）</p><ol><li>客户，商户，银行，认证中心</li></ol></li><li><p>系统应用集成</p><ol><li>保证应用独立情况下，通过接口实现共享数据和功能</li><li>集成技术：页面集成（表示集成），控制集成（API集成），数据集成（数据共享，数据仓库），<strong>业务流程集成（过程集成）</strong>，平台集成</li></ol></li><li><p>管理信息系统规划方法</p><ol><li>CSF：关键成功因素（关键信息集合，确定优先次序）</li><li>SST：战略目标集转化（战略目标集合，确定运作需求）</li><li>BSP：企业系统规划（自上而下分析系统，直下和上设计系统）</li></ol></li><li><p>ERP企业资源计划</p><ol><li>以物料，资金链，信息流全面集成管理的信息系统</li></ol></li><li><p>商业报表（数据仓库，联机分析，数据挖掘）</p></li><li><p>Kerberos统一认证授权系统</p><ol><li><p>KDC：密钥分发中心，存储用户信息，管理发放票据（包含AS，TGS）</p></li><li><p>TGP：认证票据</p></li><li><p>Realm：命名空间，不同的环境可以通过Realm区分；</p></li><li><p>Principal：Kerberos认证账号；</p></li><li><p>keytab：Kerberos认证密钥</p></li><li><p>AS：认证服务器（校验Principal，keytab或密码正确性），返回TGP</p></li><li><p>客户端携带TGP请求TGS服务器</p></li><li><p>TGS：授权服务器（校验TGP正确性，并返回HttpTicket，Session Key（包含客户信息和时间戳））</p></li><li><p>客户端携带 HttpTicket，Session Key 访问认证服务器</p><p><img src="'+e+'" alt="images/1-Framework/image-20231018171020240.png"></p></li></ol></li><li><p>软件过程模型</p><ol><li><p>瀑布模型：等待上一阶产出的结果作为输入，需求明确，有严格时间管控，适合大型项目</p></li><li><p>原型模型：产品以原型方式展示客户（需求不确定，功能复杂），根据客户反馈进行更改原型，根据原型开发产品</p></li><li><p>螺旋模型：原型与瀑布模式结合，并加入风险分析</p></li><li><p>增量模型：将需求拆分多个子项（适用于需求稳定、功能较少的项目），优先迭代核心功能。成本比低</p></li><li><p>敏捷模式：应付需求快速变化的软件开发方法，适合小项目迭代（<strong>适应性强</strong>，<strong>以人为本</strong>，迭代增量的方式）</p><blockquote><p>XP：注重用户体验、强调团队协作、强调测试驱动开发，快速响应变化和持续改进提示开发效率与质量</p><p>水晶球：不同的项目都需要一套不同的策略、约定和方法论</p><p>Scrum：迭代增量方式迭代开发</p><p>FDD特征驱动：以用户需求和期望为驱动力开发，通过迭代开发、持续集成和简单设计等方式，以提高软件开发效率和质量</p></blockquote></li><li><p>构建CBSD模型（快速应用开发）：构件复用，速度快，要求系统模块化程度高</p></li><li><p>统一建模RUP：用例驱动，以架构为中心，增量和迭代（初始，细化，构建，交付）使其项目管理、业务建模、分析与设计等统一起来，贯穿整个开发过程</p><blockquote><p>核心工作流：业务建模，需求，分析与设计，实现，测试，部署，配置与变更管理，项目管理，环境</p></blockquote></li><li><p>逆向工程：重构（改变抽象实现方式），再工程（分析已有的项目，再生成一个新的项目）</p></li></ol></li><li><p>软件过程</p><ol><li>软件周期：定义，开发，运行，维护</li><li>软件设计活动：数据，结构，人机界面，过程（需求获取，设计，实现，测试，发布，维护）</li><li>软件结构化设计：架构，接口，数据，过程</li><li>软件描述：定于软件功能和使用限制</li><li>软件开发：软件设计和实现</li><li>需求分析阶段：数据流图</li><li>概要设计阶段：模块结构图，层次图，HIPO图</li><li>详细设计阶段：程序流程图，伪代码，盒图</li></ol></li><li><p>需求获取方法</p><ol><li>用户访谈，问卷调查，JRP联合需求计划，情节串联，参与业务实践，抽样调查</li></ol></li><li><p>JRP：联合需求计划</p><ol><li><img src="'+r+'" alt="image-20231019114935492"></li></ol></li><li><p>UML：统一建模语言</p><ol><li>结构：构造块、规则和公共机制</li></ol></li><li><p>4+1视图模型</p><ol><li>逻辑：功能性需求支持</li><li>开发：软件结构之间划分。</li><li>过程：非功能性需求（并发，分布式，容错）</li><li>物理：部署视图（系统拓扑结构、系统安装图）</li><li>统一场景</li></ol></li><li><p>CMMI：能力成熟度模型，衡量软件开发过程成熟度</p><ol><li>初始级：缺乏管控，过程不可预测</li><li>可预测（已管理）：过程为项目服务（已建立基本项目管理）</li><li>已定级（高级，优化）：过程为组织服务（已提高开发效率，具备变化和挑战能力）</li></ol></li><li><p>DCMM：数据管理能力成熟平谷模型</p><ol><li>战略</li><li>治理</li><li>架构</li><li>应用</li><li>安全</li><li>质量</li><li>标准</li><li>生存周期</li></ol></li><li><p>遗留系统评估（改造 &gt; 继承 &gt; 集成 &gt; 淘汰）</p></li><li><p>管理活动</p><ol><li><p>需求管理：变更控制，版本控制，需求跟综，需求状态跟踪</p></li><li><p>项目管理：进度管理，项目配置管理，质量管理，风险管控</p><blockquote><p>软件文档：系统文档，用户文档</p></blockquote></li></ol></li><li><p>系统设计原则（抽象化，自顶向下，逐步求精，信息屏蔽，模块之间高内聚，低耦合）</p><ol><li><p>内聚</p><blockquote><p><img src="'+o+'" alt="image-20231019104123572"></p></blockquote></li><li><p>耦合</p><blockquote><p><img src="'+c+'" alt="image-20231019104153408"></p></blockquote></li><li><p>结构化分析：<strong>自顶向下，逐步分解，面向数据</strong></p></li></ol></li><li><p>架构风格</p><ol><li><p>数据流</p><blockquote><p>批处理序列：按顺序逐步执行，<strong>保持数据完整</strong></p><p>管道-过滤器：前一个构件输出作为后一个构件输入，<strong>过滤器为构件，连接件为管道</strong></p></blockquote></li><li><p>调用返回</p><blockquote><p>主程序/子程序：调用作为交互机制，连接构件</p><p>面对对象</p><p>层次结构：只允许相邻层次通信（低耦合），越底层抽象越高。难以分层</p></blockquote></li><li><p>独立构件（构件之间不存在显示调用关系，通过时间触发，异步方式执行）</p><blockquote><p>事件系统：触发或广播方式通知多个构件（匿名调用，并发执行，放弃系统计算控制）</p></blockquote></li><li><p>虚拟机（定义一套规则供使用者使用，基于规则开发构件）</p></li><li><p>仓库：以数据为中心，所有操作都围绕数据进行（数据库，超文本）</p></li></ol></li><li><p>软件架构质量属性</p><ol><li>性能：系统响应能力（响应时间，吞吐量）。通过增加计算资源，减少计算开销，引入并发机制，采用资源淘汰、调度策略提升</li><li>可靠性：意外或使用错误情况下维持系统功能特性（MTTR：平均维修时间，MTBF：平均故障间隔时间，MTTF：平均故障时间，MTTA：平均确认时间）。检测策略：心跳，Ping/Echo，冗余，选举</li><li>可用性：系统能够正常运行时间比例</li><li>安全性：阻止非授权用户使用系统。设计策略：入侵检测，用户日志，用户授权，追踪审计</li><li>可修改：系统变更能力强。设计策略：接口-实现类，抽象，内部信息封装</li><li>互操作性：与其他系统，架构集成能力</li></ol></li><li><p>软件架构分析</p><ol><li>风险：设计中潜在，存在问题的架构决策带来的隐患</li><li>敏感：实现某种特定质量属性具有的特性</li><li>均衡：响多个质量属性的特性（多个质量属性的敏感点）</li></ol></li><li><p>ATAM架构权衡分析法</p><ol><li>质量属性 &gt; 属性分类 &gt; 质量属性场景</li></ol></li><li><p>SAAM软件架构评估</p><ol><li>问题描述，需求说明，架构描述</li><li>分析过程：场景开发，框架描述，单个场景评估，场景交互，总体评估（多个相互作用）</li></ol></li><li><p>SDN网络架构：业务，控制，转发</p></li><li><p>ABSDM基于架构软件开发模型</p><ol><li>架构需求，设计，文档话，复审，实现，演化</li></ol></li><li><p>SOA关键技术</p><ol><li><p>发现服务：UDDI，DISCO</p></li><li><p>描述服务： WSDL，XML Schema</p></li><li><p>消息格式：SOAP，REST</p></li><li><p>编码格式：XML，JSON</p></li><li><p>传输协议：HTTP，TCP/IP，SMTP</p></li><li><p>UDDI：统一描述，发现和集成（用于服务注册和查找）</p></li><li><p>WSDL：服务描述语言，描述Web服务的接口与查操作功能</p></li><li><p>SOAP：对象访问协议，建立Web服务和服务请求之间的通信</p></li><li><p>ESB：企业服务总线（连接服务节点，具有消息转化，解释，路由功能，使不同的访问相互连通）</p></li></ol></li><li><p>软件可靠性指标</p><ol><li>平均失效时间MTTF</li><li>平均恢复前时间MTTR</li><li>平均故障间隔时间MTBF = MTTF + MTTR</li><li>系统可用性 MTTF / （MTTF + MTTR）</li></ol></li><li><p>可靠性设计</p><ol><li>容错设计（冗余，恢复块技术）</li><li>检错设计</li><li>减低复杂度</li></ol></li><li><p>云计算服务体系</p><ol><li>SaaS软件即服务：应用上云，通过标准浏览器向客户提供应用服务</li><li>PaaS平台即服务：提供分布式开发环境</li><li>IaaS基础实施服务：提供云内存，云I/O设备，云存储和云计算能力</li></ol></li><li><p>软件著作权</p><ol><li>自动取得/登记取得：软件开发完成之日起即自动产生软件著作权</li><li>保护期限：著作人终身及死亡后50年</li><li>发表权：指著作权人决定是否将作品公开展示和发表的权利（行使一次，作者享有）</li><li>修改权：指著作权人对其作品进行修订、修改、完善的权利（不受时间限制）</li><li>署名权：不受时间限制</li><li>复制权：指著作权人对其作品进行复制、印刷、制作副本等权利</li><li>发行权：指著作权人对其作品进行发行、销售、出租、出借等权利</li></ol></li></ul>',5)]))}const y=a(h,[["render",g]]),x=JSON.parse('{"path":"/docs/Computer/Computer/6_Framework/1-Framework.html","title":"基础","lang":"en-US","frontmatter":{"title":"基础","date":"2025/07/04"},"headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[]}],"filePathRelative":"docs/Computer/Computer/6_Framework/1-Framework.md","git":{"createdTime":1751621258000,"updatedTime":1751621258000,"contributors":[{"name":"lixuan","email":"2789968443@qq.com","commits":1}]}}');export{y as comp,x as data};
