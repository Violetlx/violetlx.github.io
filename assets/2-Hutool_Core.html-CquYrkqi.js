import{_ as s,c as a,b as e,o as t}from"./app-DlQzn5rm.js";const p={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[e(`<p><img src="https://bizhi1.com/wp-content/uploads/2024/10/mount-assiniboine-provincial-park-canada-8k-c4-7680x4320-1.jpg" alt="加拿大阿西尼博因山省立公园 8k"></p><h2 id="日期和时间" tabindex="-1"><a class="header-anchor" href="#日期和时间"><span>日期和时间</span></a></h2><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>① 概述</p><p>② 日期时间工具-DateUtil</p><p>③ 日期时间对象-DateTime</p><p>④ 农历日期-ChineseDate</p><p>⑤ LocalDateTime工具-LocalDateTimeUtil</p><p>⑥ 计时器工具-TimeInterval</p></div><h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述"><span>① 概述</span></a></h2><h3 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍"><span>1 介绍</span></a></h3><p>日期时间包是 Hutool 的核心包之一，提供针对 JDK 中 Date 和 Calendar 对象的封装</p><h3 id="_2-日期时间工具" tabindex="-1"><a class="header-anchor" href="#_2-日期时间工具"><span>2 日期时间工具</span></a></h3><ul><li><code>DateUtil</code> 针对日期时间操作提供一系列静态方法。</li><li><code>DateTime</code> 提供类似于 <code>Joda-Time</code> 中日期时间对象的封装，继承自 <code>Date</code> 类，并提供更加丰富的对象方法。</li><li><code>FastDateFormat</code> 提供线程安全的针对 Date 对象的格式和日期字符串解析支持。此对象在实际使用中并不需要感知，相关操作已封装在 <code>DateUtil</code> 和 <code>DateTime</code> 的相关方法中。</li><li><code>DateBetween</code> 计算两个时间间隔的类，除了通过构造新对象外，相关操作也封装在 <code>DateUtil</code> 和 <code>DateTime</code> 的相关方法中。</li><li><code>TimeInterval</code> 一个简单的计时器类，常用于计算某段代码的执行时间，提供包括毫秒、秒、分、时、天、周等各种单位的花费时长计算，对象的静态构造已封装在 <code>DateUtil</code> 中。</li><li><code>DatePattern</code> 提供常用的日期格式化模式，包括 <code>String</code> 类型和 <code>FastDateFormat</code> 两种类型。</li></ul><h3 id="_3-日期枚举" tabindex="-1"><a class="header-anchor" href="#_3-日期枚举"><span>3 日期枚举</span></a></h3><p>考虑到 Calendar 类中表示时间的字段（field）都是使用 int 表示，在使用中非常不方便，因此针对这些 int 字段，封装了与之对应的 Enum 枚举类，这些枚举类在 DateUtil 和 DateTime 相关方法中作为参数使用，可以更大限度的缩小参数限定范围。</p><p>这些定义的枚举值可以通过 <code>getValue()</code> 方法获得其与 Calendar 类对应的 int 值，通过 <code>of(int)</code> 方法从 Calendar 中 int 值转为枚举对象。</p><p>与 Calendar 对应的枚举：</p><ul><li><code>Month</code> 表示月份，与 Calendar 中的 int 值<code>一一对应</code></li><li><code>Week</code> 表示周，与 Calendar 中的 int 值<code>一一对应</code></li></ul><h3 id="_4-月份枚举" tabindex="-1"><a class="header-anchor" href="#_4-月份枚举"><span>4 月份枚举</span></a></h3><p>通过月份枚举可以获得某个月的最后一天</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">// 31</span></span>
<span class="line"><span class="token keyword">int</span> lastDay <span class="token operator">=</span> <span class="token keyword">Month</span><span class="token punctuation">.</span><span class="token keyword">of</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>JANUARY<span class="token punctuation">)</span><span class="token punctuation">.</span>getLastDay<span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，Hutool 还定义了季度枚举。<code>Season.SPRING</code> 为第一季度，表示 1~3月。季度的概念并不等同于季节，因为季节与月份并不对应，季度常用于统计概念。</p><h3 id="_5-时间枚举" tabindex="-1"><a class="header-anchor" href="#_5-时间枚举"><span>5 时间枚举</span></a></h3><p>时间枚举 <code>DateUnit</code> 主要表示某个时间单位对应的毫秒数，常用于计算时间差。</p><p>例如：<code>DateUnit.MINUTE</code> 表示分，也表示一分钟的毫秒数，可以通过调用其 <code>getMillis()</code> 方法获得其毫秒数。</p><h2 id="_2-日期时间工具-dateutil" tabindex="-1"><a class="header-anchor" href="#_2-日期时间工具-dateutil"><span>② 日期时间工具-DateUtil</span></a></h2><h3 id="_1-由来" tabindex="-1"><a class="header-anchor" href="#_1-由来"><span>1 由来</span></a></h3><p>考虑到 Java 本身对日期时间的支持有限，并且 Date 和 Calendar 对象的并存导致各种方法使用混乱和复杂，故使用此工具类做了封装。这其中的封装主要是日期和字符串之间的转换，以及提供对日期的定位（一个月前等等）。</p><p>对于 Date 对象，为了便捷，使用了一个 DateTime 类来代替之，继承自 Date 对象，主要的便利在于，覆盖了 <code>toString()</code> 方法，返回 <code>yyyy-MM-dd HH:mm:ss</code> 形式的字符串，方便再输出时调用（例如日志记录等），提供了众多便捷的方法对日期的对象操作，关于 DateTime 会在相关章节介绍。</p><h3 id="_2-方法" tabindex="-1"><a class="header-anchor" href="#_2-方法"><span>2 方法</span></a></h3><h3 id="i-转换" tabindex="-1"><a class="header-anchor" href="#i-转换"><span>Ⅰ 转换</span></a></h3><p>① Date、long、Calendar 之间的相互转换</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//当前时间</span></span>
<span class="line"><span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//当前时间</span></span>
<span class="line"><span class="token class-name">Date</span> date2 <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//当前时间</span></span>
<span class="line"><span class="token class-name">Date</span> date3 <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//当前时间字符串，格式：yyyy-MM-dd HH:mm:ss</span></span>
<span class="line"><span class="token class-name">String</span> now <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//当前日期字符串，格式：yyyy-MM-dd</span></span>
<span class="line"><span class="token class-name">String</span> today<span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">today</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>② 字符串转日期</p><p><code>DateUtil.parse</code>方法会自动识别一些常用格式，包括：</p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token operator">-</span> yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd <span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss</span>
<span class="line"><span class="token operator">-</span> yyyy<span class="token operator">/</span><span class="token constant">MM</span><span class="token operator">/</span>dd <span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss</span>
<span class="line"><span class="token operator">-</span> yyyy<span class="token punctuation">.</span><span class="token constant">MM</span><span class="token punctuation">.</span>dd <span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss</span>
<span class="line"><span class="token operator">-</span> yyyy年<span class="token constant">MM</span>月dd日 <span class="token constant">HH</span>时mm分ss秒</span>
<span class="line"><span class="token operator">-</span> yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd</span>
<span class="line"><span class="token operator">-</span> yyyy<span class="token operator">/</span><span class="token constant">MM</span><span class="token operator">/</span>dd</span>
<span class="line"><span class="token operator">-</span> yyyy<span class="token punctuation">.</span><span class="token constant">MM</span><span class="token punctuation">.</span>dd</span>
<span class="line"><span class="token operator">-</span> <span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss</span>
<span class="line"><span class="token operator">-</span> <span class="token constant">HH</span>时mm分ss秒</span>
<span class="line"><span class="token operator">-</span> yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd <span class="token constant">HH</span><span class="token operator">:</span>mm</span>
<span class="line"><span class="token operator">-</span> yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd <span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSS</span></span>
<span class="line"><span class="token operator">-</span> yyyyMMddHHmmss</span>
<span class="line"><span class="token operator">-</span> yyyyMMddHHmmssSSS</span>
<span class="line"><span class="token operator">-</span> yyyyMMdd</span>
<span class="line"><span class="token operator">-</span> <span class="token constant">EEE</span><span class="token punctuation">,</span> dd <span class="token constant">MMM</span> yyyy <span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss z</span>
<span class="line"><span class="token operator">-</span> <span class="token constant">EEE</span> <span class="token constant">MMM</span> dd <span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss zzz yyyy</span>
<span class="line"><span class="token operator">-</span> yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">&#39;T&#39;</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token char">&#39;Z&#39;</span></span>
<span class="line"><span class="token operator">-</span> yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">&#39;T&#39;</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSS</span><span class="token char">&#39;Z&#39;</span></span>
<span class="line"><span class="token operator">-</span> yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">&#39;T&#39;</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ssZ</span>
<span class="line"><span class="token operator">-</span> yyyy<span class="token operator">-</span><span class="token constant">MM</span><span class="token operator">-</span>dd<span class="token char">&#39;T&#39;</span><span class="token constant">HH</span><span class="token operator">:</span>mm<span class="token operator">:</span>ss<span class="token punctuation">.</span><span class="token constant">SSSZ</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>字符串转化日期：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> dateStr <span class="token operator">=</span> <span class="token string">&quot;2017-03-01&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们也可以使用自定义日期格式转化;</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> dateStr <span class="token operator">=</span> <span class="token string">&quot;2017-03-01&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ii-格式化日期输出" tabindex="-1"><a class="header-anchor" href="#ii-格式化日期输出"><span>Ⅱ 格式化日期输出</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> dateStr <span class="token operator">=</span> <span class="token string">&quot;2017-03-01&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//结果 2017/03/01</span></span>
<span class="line"><span class="token class-name">String</span> format <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&quot;yyyy/MM/dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//常用格式的格式化，结果：2017-03-01</span></span>
<span class="line"><span class="token class-name">String</span> formatDate <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">formatDate</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//结果：2017-03-01 00:00:00</span></span>
<span class="line"><span class="token class-name">String</span> formatDateTime <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">formatDateTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//结果：00:00:00</span></span>
<span class="line"><span class="token class-name">String</span> formatTime <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">formatTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="iii-获取-date-对象的某个部分" tabindex="-1"><a class="header-anchor" href="#iii-获取-date-对象的某个部分"><span>Ⅲ 获取 Date 对象的某个部分</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//获得年的部分</span></span>
<span class="line"><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">year</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//获得月份，从0开始计数</span></span>
<span class="line"><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">month</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//获得月份枚举</span></span>
<span class="line"><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">monthEnum</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//.....</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="iv-开始和结束时间" tabindex="-1"><a class="header-anchor" href="#iv-开始和结束时间"><span>Ⅳ 开始和结束时间</span></a></h3><p>有的时候我们需要获得每天的开始时间、结束时间，每月的开始和结束时间等等，DateUtil 也提供了相关方法：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> dateStr <span class="token operator">=</span> <span class="token string">&quot;2017-03-01 22:33:23&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//一天的开始，结果：2017-03-01 00:00:00</span></span>
<span class="line"><span class="token class-name">Date</span> beginOfDay <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">beginOfDay</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//一天的结束，结果：2017-03-01 23:59:59</span></span>
<span class="line"><span class="token class-name">Date</span> endOfDay <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">endOfDay</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="v-日期时间偏移" tabindex="-1"><a class="header-anchor" href="#v-日期时间偏移"><span>Ⅴ 日期时间偏移</span></a></h3><p>① 日期或时间的偏移指针对某个日期增加或减少分、小时、天等等，达到日期变更的目的。Hutool 也针对其做了大量封装</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> dateStr <span class="token operator">=</span> <span class="token string">&quot;2017-03-01 22:33:23&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//结果：2017-03-03 22:33:23</span></span>
<span class="line"><span class="token class-name">Date</span> newDate <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token class-name">DateField</span><span class="token punctuation">.</span><span class="token constant">DAY_OF_MONTH</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//常用偏移，结果：2017-03-04 22:33:23</span></span>
<span class="line"><span class="token class-name">DateTime</span> newDate2 <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">offsetDay</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//常用偏移，结果：2017-03-01 19:33:23</span></span>
<span class="line"><span class="token class-name">DateTime</span> newDate3 <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">offsetHour</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>② 针对当前时间，提供了简化的偏移方法（例如昨天、上周、上个月等）</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//昨天</span></span>
<span class="line"><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">yesterday</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//明天</span></span>
<span class="line"><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">tomorrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//上周</span></span>
<span class="line"><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">lastWeek</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//下周</span></span>
<span class="line"><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">nextWeek</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//上个月</span></span>
<span class="line"><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">lastMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//下个月</span></span>
<span class="line"><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">nextMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vi-日期时间差" tabindex="-1"><a class="header-anchor" href="#vi-日期时间差"><span>Ⅵ 日期时间差</span></a></h3><p>有时候我们需要计算两个日期之间的时间差（相差天数、相差小时数等等），Hutool 将此类方法封装为 <code>between()</code> 方法</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> dateStr1 <span class="token operator">=</span> <span class="token string">&quot;2017-03-01 22:33:23&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Date</span> date1 <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dateStr1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">String</span> dateStr2 <span class="token operator">=</span> <span class="token string">&quot;2017-04-01 23:33:23&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Date</span> date2 <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dateStr2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//相差一个月，31天</span></span>
<span class="line"><span class="token keyword">long</span> betweenDay <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span>date1<span class="token punctuation">,</span> date2<span class="token punctuation">,</span> <span class="token class-name">DateUnit</span><span class="token punctuation">.</span><span class="token constant">DAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vii-格式化时间差" tabindex="-1"><a class="header-anchor" href="#vii-格式化时间差"><span>Ⅶ 格式化时间差</span></a></h3><p>有时候我们希望看到易读的时间差，比如xx天xx小时xx分xx秒，此时使用 <code>DateUtil.formatBetween</code> 方法</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> dateStr1 <span class="token operator">=</span> <span class="token string">&quot;2017-03-01 22:33:23&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Date</span> date1 <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dateStr1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">String</span> dateStr2 <span class="token operator">=</span> <span class="token string">&quot;2017-04-01 23:34:23&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Date</span> date2 <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dateStr2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//Level.MINUTE表示精确到分</span></span>
<span class="line"><span class="token class-name">String</span> formatBetween <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">formatBetween</span><span class="token punctuation">(</span>date1<span class="token punctuation">,</span> date2<span class="token punctuation">,</span> <span class="token class-name">BetweenFormatter<span class="token punctuation">.</span>Level</span><span class="token punctuation">.</span><span class="token constant">MINUTE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//输出：31天1小时1分</span></span>
<span class="line"><span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formatBetween<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="viii-星座和属相" tabindex="-1"><a class="header-anchor" href="#viii-星座和属相"><span>Ⅷ 星座和属相</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// &quot;摩羯座&quot;</span></span>
<span class="line"><span class="token class-name">String</span> zodiac <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">getZodiac</span><span class="token punctuation">(</span><span class="token class-name">Month</span><span class="token punctuation">.</span><span class="token constant">JANUARY</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// &quot;狗&quot;</span></span>
<span class="line"><span class="token class-name">String</span> chineseZodiac <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">getChineseZodiac</span><span class="token punctuation">(</span><span class="token number">1994</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ix-日期范围" tabindex="-1"><a class="header-anchor" href="#ix-日期范围"><span>Ⅸ 日期范围</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 创建日期范围生成器</span></span>
<span class="line"><span class="token class-name">DateTime</span> start <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2021-01-31&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">DateTime</span> end <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2021-03-31&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">DateRange</span> range <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> <span class="token class-name">DateField</span><span class="token punctuation">.</span><span class="token constant">MONTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 简单使用</span></span>
<span class="line"><span class="token comment">// 开始时间</span></span>
<span class="line"><span class="token class-name">DateRange</span> startRange <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2017-01-01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2017-01-31&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateField</span><span class="token punctuation">.</span><span class="token constant">DAY_OF_YEAR</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 结束时间</span></span>
<span class="line"><span class="token class-name">DateRange</span> endRange <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2017-01-31&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2017-02-02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateField</span><span class="token punctuation">.</span><span class="token constant">DAY_OF_YEAR</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 交集 返回 [2017-01-31 00:00:00]</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DateTime</span><span class="token punctuation">&gt;</span></span> dateTimes <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">rangeContains</span><span class="token punctuation">(</span>startRange<span class="token punctuation">,</span> endRange<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 差集 返回 [2017-02-01 00:00:00, 2017-02-02 00:00:00]</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DateTime</span><span class="token punctuation">&gt;</span></span> dateNotTimes <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">rangeNotContains</span><span class="token punctuation">(</span>startRange<span class="token punctuation">,</span>endRange<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 区间 返回[2017-01-01 00:00:00, 2017-01-02 00:00:00, 2017-01-03 00:00:00]</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DateTime</span><span class="token punctuation">&gt;</span></span> rangeToList <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">rangeToList</span><span class="token punctuation">(</span><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2017-01-01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2017-01-03&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateField</span><span class="token punctuation">.</span><span class="token constant">DAY_OF_YEAR</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ⅹ 其他</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//年龄</span></span>
<span class="line"><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">ageOfNow</span><span class="token punctuation">(</span><span class="token string">&quot;1990-01-30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//是否闰年</span></span>
<span class="line"><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">isLeapYear</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-日期事件对象-datetime" tabindex="-1"><a class="header-anchor" href="#_3-日期事件对象-datetime"><span>③ 日期事件对象-DateTime</span></a></h2><h3 id="_1-由来-1" tabindex="-1"><a class="header-anchor" href="#_1-由来-1"><span>1 由来</span></a></h3><p>考虑工具类的属性，在某些情况下使用并不简便，于是 DateTime 类诞生。<code>DateTime</code> 对象充分吸取 <code>Joda-Time</code> 库的有点，并提供更多的便捷方法，这样我们在开发时不必再单独导入 Jada-Time 库便可以享受简单快速的日期时间处理过程。</p><h3 id="_2-说明" tabindex="-1"><a class="header-anchor" href="#_2-说明"><span>2 说明</span></a></h3><p>DateTime 类继承于 <code>java.util.Date</code> 类，为 Date 类扩展了众多便捷方法，这些方法多是 DateUtil 静态方法的对象表现形式，使用 DateTime 对象可以完全代替开发中 Date 对象的使用。</p><h3 id="_3-使用" tabindex="-1"><a class="header-anchor" href="#_3-使用"><span>3 使用</span></a></h3><h3 id="i-新建对象" tabindex="-1"><a class="header-anchor" href="#i-新建对象"><span>Ⅰ 新建对象</span></a></h3><p><code>DateTime</code> 对象包含众多的构造方法，构造方法支持的参数有：</p><ul><li>Date</li><li>Calendar</li><li>String(日期字符串，第二个参数是日期格式)</li><li>long 毫秒数</li></ul><p>构建对象有两种方式：<code>DateTime.of()</code> 和 <code>new DateTime()</code> ：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		</span>
<span class="line"><span class="token comment">//new方式创建</span></span>
<span class="line"><span class="token class-name">DateTime</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//of方式创建</span></span>
<span class="line"><span class="token class-name">DateTime</span> dt <span class="token operator">=</span> <span class="token class-name">DateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">DateTime</span> now <span class="token operator">=</span> <span class="token class-name">DateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ii-使用对象" tabindex="-1"><a class="header-anchor" href="#ii-使用对象"><span>Ⅱ 使用对象</span></a></h3><p>DateTime 的成员方法与 DateUtil 中的静态方法所对应，因为是成员方法，因此可以使用更少的参数操作日期时间。</p><p>示例：获取日期成员（年、月、日等）</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">DateTime</span> dateTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token string">&quot;2017-01-05 12:34:23&quot;</span><span class="token punctuation">,</span> <span class="token class-name">DatePattern</span><span class="token punctuation">.</span><span class="token constant">NORM_DATETIME_FORMAT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		</span>
<span class="line"><span class="token comment">//年，结果：2017</span></span>
<span class="line"><span class="token keyword">int</span> year <span class="token operator">=</span> dateTime<span class="token punctuation">.</span><span class="token function">year</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//季度（非季节），结果：Season.SPRING</span></span>
<span class="line"><span class="token class-name">Season</span> season <span class="token operator">=</span> dateTime<span class="token punctuation">.</span><span class="token function">seasonEnum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//季度（非季节），结果：Q1  (5.8.25)</span></span>
<span class="line"><span class="token class-name">Quarter</span> quarter <span class="token operator">=</span> dateTime<span class="token punctuation">.</span><span class="token function">quarterEnum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//月份，结果：Month.JANUARY</span></span>
<span class="line"><span class="token class-name">Month</span> month <span class="token operator">=</span> dateTime<span class="token punctuation">.</span><span class="token function">monthEnum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//日，结果：5</span></span>
<span class="line"><span class="token keyword">int</span> day <span class="token operator">=</span> dateTime<span class="token punctuation">.</span><span class="token function">dayOfMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="iii-对象的可变性" tabindex="-1"><a class="header-anchor" href="#iii-对象的可变性"><span>Ⅲ 对象的可变性</span></a></h3><p>DateTime 对象默认是可变对象（调用 <code>offset、setField、setTime</code> 方法默认变更自身），但是这种可变性有时候会引起很多问题（例如多个地方共用 DateTime 对象）。我们可以调用 <code>setMutable(false)</code> 方法使其变为不可变对象。在不可变模式下， <code>offset、setField、setTime</code> 方法返回一个新对象，<code>setTime</code> 方法抛出异常。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">DateTime</span> dateTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token string">&quot;2017-01-05 12:34:23&quot;</span><span class="token punctuation">,</span> <span class="token class-name">DatePattern</span><span class="token punctuation">.</span><span class="token constant">NORM_DATETIME_FORMAT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//默认情况下DateTime为可变对象，此时offset == dateTime</span></span>
<span class="line"><span class="token class-name">DateTime</span> offset <span class="token operator">=</span> dateTime<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token class-name">DateField</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//设置为不可变对象后变动将返回新对象，此时offset != dateTime</span></span>
<span class="line">dateTime<span class="token punctuation">.</span><span class="token function">setMutable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">offset <span class="token operator">=</span> dateTime<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token class-name">DateField</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="iv-格式化字符串" tabindex="-1"><a class="header-anchor" href="#iv-格式化字符串"><span>Ⅳ 格式化字符串</span></a></h3><p>调用 <code>toString()</code> 方法即可返回格式为 <code>yyyy-MM-dd HH:mm:ss</code> 的字符串，调用 <code>toString(String format)</code> 可以返回制定格式的字符串。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">DateTime</span> dateTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token string">&quot;2017-01-05 12:34:23&quot;</span><span class="token punctuation">,</span> <span class="token class-name">DatePattern</span><span class="token punctuation">.</span><span class="token constant">NORM_DATETIME_FORMAT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//结果：2017-01-05 12:34:23</span></span>
<span class="line"><span class="token class-name">String</span> dateStr <span class="token operator">=</span> dateTime<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//结果：2017/01/05</span></span>
<span class="line"><span class="token class-name">String</span> dateStr <span class="token operator">=</span> dateTime<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy/MM/dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,80)]))}const i=s(p,[["render",l]]),u=JSON.parse('{"path":"/docs/Java/Hutool/2_Hutool_Core/2-Hutool_Core.html","title":"Hutool-Core核心（二）","lang":"en-US","frontmatter":{"title":"Hutool-Core核心（二）","date":"2024/12/18"},"headers":[{"level":2,"title":"日期和时间","slug":"日期和时间","link":"#日期和时间","children":[]},{"level":2,"title":"① 概述","slug":"_1-概述","link":"#_1-概述","children":[{"level":3,"title":"1 介绍","slug":"_1-介绍","link":"#_1-介绍","children":[]},{"level":3,"title":"2 日期时间工具","slug":"_2-日期时间工具","link":"#_2-日期时间工具","children":[]},{"level":3,"title":"3 日期枚举","slug":"_3-日期枚举","link":"#_3-日期枚举","children":[]},{"level":3,"title":"4 月份枚举","slug":"_4-月份枚举","link":"#_4-月份枚举","children":[]},{"level":3,"title":"5 时间枚举","slug":"_5-时间枚举","link":"#_5-时间枚举","children":[]}]},{"level":2,"title":"② 日期时间工具-DateUtil","slug":"_2-日期时间工具-dateutil","link":"#_2-日期时间工具-dateutil","children":[{"level":3,"title":"1 由来","slug":"_1-由来","link":"#_1-由来","children":[]},{"level":3,"title":"2 方法","slug":"_2-方法","link":"#_2-方法","children":[]},{"level":3,"title":"Ⅰ 转换","slug":"i-转换","link":"#i-转换","children":[]},{"level":3,"title":"Ⅱ 格式化日期输出","slug":"ii-格式化日期输出","link":"#ii-格式化日期输出","children":[]},{"level":3,"title":"Ⅲ 获取 Date 对象的某个部分","slug":"iii-获取-date-对象的某个部分","link":"#iii-获取-date-对象的某个部分","children":[]},{"level":3,"title":"Ⅳ 开始和结束时间","slug":"iv-开始和结束时间","link":"#iv-开始和结束时间","children":[]},{"level":3,"title":"Ⅴ 日期时间偏移","slug":"v-日期时间偏移","link":"#v-日期时间偏移","children":[]},{"level":3,"title":"Ⅵ 日期时间差","slug":"vi-日期时间差","link":"#vi-日期时间差","children":[]},{"level":3,"title":"Ⅶ 格式化时间差","slug":"vii-格式化时间差","link":"#vii-格式化时间差","children":[]},{"level":3,"title":"Ⅷ 星座和属相","slug":"viii-星座和属相","link":"#viii-星座和属相","children":[]},{"level":3,"title":"Ⅸ 日期范围","slug":"ix-日期范围","link":"#ix-日期范围","children":[]}]},{"level":2,"title":"③ 日期事件对象-DateTime","slug":"_3-日期事件对象-datetime","link":"#_3-日期事件对象-datetime","children":[{"level":3,"title":"1 由来","slug":"_1-由来-1","link":"#_1-由来-1","children":[]},{"level":3,"title":"2 说明","slug":"_2-说明","link":"#_2-说明","children":[]},{"level":3,"title":"3 使用","slug":"_3-使用","link":"#_3-使用","children":[]},{"level":3,"title":"Ⅰ 新建对象","slug":"i-新建对象","link":"#i-新建对象","children":[]},{"level":3,"title":"Ⅱ 使用对象","slug":"ii-使用对象","link":"#ii-使用对象","children":[]},{"level":3,"title":"Ⅲ 对象的可变性","slug":"iii-对象的可变性","link":"#iii-对象的可变性","children":[]},{"level":3,"title":"Ⅳ 格式化字符串","slug":"iv-格式化字符串","link":"#iv-格式化字符串","children":[]}]}],"filePathRelative":"docs/Java/Hutool/2_Hutool_Core/2-Hutool_Core.md","git":{"createdTime":1734515917000,"updatedTime":1734915055000,"contributors":[{"name":"lixuan","email":"2789968443@qq.com","commits":2}]}}');export{i as comp,u as data};
