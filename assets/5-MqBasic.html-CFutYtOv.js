import{_ as i,c as a,b as r,a as t,d as l,e as n,r as s,o as c}from"./app-BDBTreNG.js";const p={},d={href:"https://docs.spring.io/spring-amqp/docs/2.4.14/reference/html/#post-processing",target:"_blank",rel:"noopener noreferrer"};function h(m,e){const o=s("ExternalLinkIcon");return c(),a("div",null,[e[1]||(e[1]=r('<p><img src="https://bizhi1.com/wp-content/uploads/2024/11/下雨天-小女孩-小黑猫-ɡ-4K动漫壁纸3840x2160.jpg" alt="下雨天 小女孩 小黑猫 伞 4K动漫壁纸"></p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>1 抽取共享的 MQ 配置</p><p>2 改造下单功能</p><p>3 登录信息传递优化</p><p>4 改造项目一</p></div><h2 id="_1-抽取共享的-mq-配置" tabindex="-1"><a class="header-anchor" href="#_1-抽取共享的-mq-配置"><span>1 抽取共享的 MQ 配置</span></a></h2><p>将MQ配置抽取到Nacos中管理，微服务中直接使用共享配置。</p><h2 id="_2-改造下单功能" tabindex="-1"><a class="header-anchor" href="#_2-改造下单功能"><span>2 改造下单功能</span></a></h2><p>改造下单功能，将基于OpenFeign的清理购物车同步调用，改为基于RabbitMQ的异步通知：</p><ul><li>定义topic类型交换机，命名为<code>trade.topic</code></li><li>定义消息队列，命名为<code>cart.clear.queue</code></li><li>将<code>cart.clear.queue</code>与<code>trade.topic</code>绑定，<code>BindingKey</code>为<code>order.create</code></li><li>下单成功时不再调用清理购物车接口，而是发送一条消息到<code>trade.topic</code>，发送消息的<code>RoutingKey</code> 为<code>order.create</code>，消息内容是下单的具体商品、当前登录用户信息</li><li>购物车服务监听<code>cart.clear.queue</code>队列，接收到消息后清理指定用户的购物车中的指定商品</li></ul><h2 id="_3-登录信息传递优化" tabindex="-1"><a class="header-anchor" href="#_3-登录信息传递优化"><span>3 登录信息传递优化</span></a></h2><p>某些业务中，需要根据登录用户信息处理业务，而基于MQ的异步调用并不会传递登录用户信息。前面我们的做法比较麻烦，至少要做两件事：</p><ul><li>消息发送者在消息体中传递登录用户</li><li>消费者获取消息体中的登录用户，处理业务</li></ul><p>这样做不仅麻烦，而且编程体验也不统一，毕竟我们之前都是使用UserContext来获取用户。</p><p>大家思考一下：有没有更优雅的办法传输登录用户信息，让使用MQ的人无感知，依然采用UserContext来随时获取用户。</p><p>参考资料：</p>',13)),t("p",null,[t("a",d,[e[0]||(e[0]=l("https://docs.spring.io/spring-amqp/docs/2.4.14/reference/html/#post-processing")),n(o)])]),e[2]||(e[2]=t("h2",{id:"_4-改造项目一",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_4-改造项目一"},[t("span",null,"4 改造项目一")])],-1)),e[3]||(e[3]=t("p",null,"思考一下，项目一中的哪些业务可以由同步方式改为异步方式调用？试着改造一下。",-1)),e[4]||(e[4]=t("p",null,"举例：短信发送",-1))])}const g=i(p,[["render",h]]),_=JSON.parse('{"path":"/docs/Java/Heima/Microservices/Day06_MqBasic/5-MqBasic.html","title":"练习","lang":"en-US","frontmatter":{"title":"练习","date":"2025/03/06"},"headers":[{"level":2,"title":"1 抽取共享的 MQ 配置","slug":"_1-抽取共享的-mq-配置","link":"#_1-抽取共享的-mq-配置","children":[]},{"level":2,"title":"2 改造下单功能","slug":"_2-改造下单功能","link":"#_2-改造下单功能","children":[]},{"level":2,"title":"3 登录信息传递优化","slug":"_3-登录信息传递优化","link":"#_3-登录信息传递优化","children":[]},{"level":2,"title":"4 改造项目一","slug":"_4-改造项目一","link":"#_4-改造项目一","children":[]}],"filePathRelative":"docs/Java/Heima/Microservices/Day06_MqBasic/5-MqBasic.md","git":{"createdTime":1741251281000,"updatedTime":1750737247000,"contributors":[{"name":"lixuan","email":"2789968443@qq.com","commits":2}]}}');export{g as comp,_ as data};
