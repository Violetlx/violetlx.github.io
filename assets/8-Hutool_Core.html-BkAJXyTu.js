import{_ as l,c,b as p,a,d as s,e,r as o,o as i}from"./app-B_5tQx1u.js";const u={},r={href:"https://github.com/looly/hulu",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/looly/hulu",target:"_blank",rel:"noopener noreferrer"},d={href:"https://apidoc.gitee.com/loolly/hutool/cn/hutool/core/util/ClassUtil.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.csdn.net/evangel_z/article/details/7624503",target:"_blank",rel:"noopener noreferrer"};function v(b,n){const t=o("ExternalLinkIcon");return i(),c("div",null,[n[13]||(n[13]=p('<p><img src="https://bizhi1.com/wp-content/uploads/2024/06/mountain-sunrise-solitude-desktop-wallpaper-small.jpg" alt="山日出孤独桌面壁纸"></p><h2 id="工具类" tabindex="-1"><a class="header-anchor" href="#工具类"><span>工具类</span></a></h2><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>① 概述</p><p>② 字符串工具-StrUtil</p><p>③ 16进制工具-HexUtil</p><p>④ Escape工具-EscapeUtil</p><p>⑤ Hash算法-HashUtil</p><p>⑥ URL工具-URLUtil</p><p>⑦ XML工具-XmlUtil</p><p>⑧ 对象工具-ObjectUtil</p><p>⑨ 反射工具-ReflectUtil</p><p>⑩ 泛型类型工具-TypeUtil</p><p>⑪ 分页工具-PageUtil</p><p>⑫ 剪贴板工具-ClipboardUtil</p><p>⑬ 类工具-ClassUtil</p><p>⑭ 枚举工具-EnumUtil</p><p>⑮ 命令行工具-RuntimeUtil</p><p>⑯ 数字工具-NumberUtil</p><p>⑰ 数组工具-ArrayUtil</p><p>⑱ 随机工具-RandomUtil</p><p>⑲ 唯一ID工具-IdUtil</p><p>⑳ 压缩工具-ZipUtil</p><p>㉑ 引用工具-ReferenceUtil</p><p>㉒ 正则工具-ReUtil</p><p>㉓ 身份证工具-IdcardUtil</p><p>㉔ 信息脱敏工具-DesensitizedUtil</p><p>㉕ 社会信用代码工具-CreditCodeUtil</p><p>㉖ SPI加载工具-ServiceLoaderUtil</p><p>㉗ 字符编码工具-CharseUtil</p><p>㉘ 类加载工具-ClassLoaderUtil</p></div><h2 id="_13-类工具-classutil" tabindex="-1"><a class="header-anchor" href="#_13-类工具-classutil"><span>⑬ 类工具-ClassUtil</span></a></h2><h3 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍"><span>1 介绍</span></a></h3>',5)),a("p",null,[n[1]||(n[1]=s("这个工具主要是封装了一些反射的方法，使调用更加方便。而这个类中最有用的方法是 ")),n[2]||(n[2]=a("code",null,"scanPackage",-1)),n[3]||(n[3]=s(" 方法，这个方法会扫描 classpath 下所有类，这个再 Spring 中是特性之一，主要为 ")),a("a",r,[n[0]||(n[0]=s("Hulu")),e(t)]),n[4]||(n[4]=s(" 框架中类扫描的一个基础。下面介绍这个类中的方法。"))]),n[14]||(n[14]=p(`<h3 id="_2-使用" tabindex="-1"><a class="header-anchor" href="#_2-使用"><span>2 使用</span></a></h3><p><strong>① getShortClassName</strong></p><p>获取完整类名的段格式如：<code>cn.hutool.core.util.StrUtil</code> -&gt; <code>c.h.c.u.StrUtil</code></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 1 getShortClassName</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//获取完整类名的短格式如：cn.hutool.core.util.StrUtil -&gt; c.h.c.u.StrUtil</span></span>
<span class="line">        </span>
<span class="line">        <span class="token class-name">String</span> className <span class="token operator">=</span> <span class="token string">&quot;com.hutool.core.tool.Main12&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> shortClassName <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getShortClassName</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--shortClassName==&gt;&quot;</span><span class="token operator">+</span>shortClassName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token class-name">Main12</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> shortName <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getShortClassName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--shortName==&gt;&quot;</span><span class="token operator">+</span>shortName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test1--shortClassName==&gt;c.h.c.t.Main12 </span></span>
<span class="line">        <span class="token comment">//test1--shortName==&gt;c.h.c.t.Main12</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>② isAllAssignableFrom</strong></p><p>比较判断 types1 和 types2 两组类，如果 types1 中所有的类都与 types2 对应位置的类相同，或者是其父类或接口，则返回 true</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 2 isAllAssignableFrom</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//判断是否所有元素都是指定类型的父类或接口</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> classes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> classes1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> classes2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">boolean</span> isAllAssignableFrom <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">isAllAssignableFrom</span><span class="token punctuation">(</span>classes1<span class="token punctuation">,</span> classes<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test2--isAllAssignableFrom==&gt;&quot;</span><span class="token operator">+</span>isAllAssignableFrom<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">boolean</span> isAllAssignableFrom1 <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">isAllAssignableFrom</span><span class="token punctuation">(</span>classes2<span class="token punctuation">,</span> classes<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test2--isAllAssignableFrom1==&gt;&quot;</span><span class="token operator">+</span>isAllAssignableFrom1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test2--isAllAssignableFrom==&gt;false</span></span>
<span class="line">        <span class="token comment">//test2--isAllAssignableFrom1==&gt;true</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>③ isPrimitiveWrapper</strong></p><p>是否为包装类型</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 3 isPrimitiveWrapper</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//判断是否为原始类型或原始类型包装类</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">boolean</span> isPrimitiveWrapper <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">isPrimitiveWrapper</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test3--isPrimitiveWrapper==&gt;&quot;</span><span class="token operator">+</span>isPrimitiveWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">boolean</span> isPrimitiveWrapper1 <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">isPrimitiveWrapper</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test3--isPrimitiveWrapper1==&gt;&quot;</span><span class="token operator">+</span>isPrimitiveWrapper1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test3--isPrimitiveWrapper==&gt;false</span></span>
<span class="line">        <span class="token comment">//test3--isPrimitiveWrapper1==&gt;true</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>④ isBasicType</strong></p><p>是否为基本类型（包括包装类和原始类）</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 4 isBasicType</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//判断是否为原始类型或原始类型包装类</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">boolean</span> basicType <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">isBasicType</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test4--basicType==&gt;&quot;</span><span class="token operator">+</span>basicType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">boolean</span> basicType1 <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">isBasicType</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test4--basicType1==&gt;&quot;</span><span class="token operator">+</span>basicType1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">boolean</span> basicType2 <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">isBasicType</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test4--basicType2==&gt;&quot;</span><span class="token operator">+</span>basicType2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test4--basicType==&gt;true</span></span>
<span class="line">        <span class="token comment">//test4--basicType1==&gt;true</span></span>
<span class="line">        <span class="token comment">//test4--basicType2==&gt;true</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑤ getPackage</strong></p><p>获得给定类所在包的名称，例如： <code>cn.hutool.util.ClassUtil</code> -&gt; <code>cn.hutool.util</code></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 5 getPackage</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//获取包名</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">String</span> aPackage <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getPackage</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test5--aPackage==&gt;&quot;</span><span class="token operator">+</span>aPackage<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">String</span> bPackage <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getPackage</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test5--bPackage==&gt;&quot;</span><span class="token operator">+</span>bPackage<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test5--aPackage==&gt;java.lang</span></span>
<span class="line">        <span class="token comment">//test5--bPackage==&gt;java.lang</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑥ scanPackage 方法</strong></p>`,17)),a("p",null,[n[6]||(n[6]=s("此方法唯一的参数是包的名称，返回结果为此包及以下子包下所有的类。方法使用很简单，但是过程复杂一些，包扫描首先会调用 getClassPaths 方法获得 ClassPath，然后扫描 ClassPath ，如果是目录，扫描目录下的类文件，或者 jar 文件。如果是 jar 包，则直接从 jar 包中获取类名。这个方法的作用显而易见，就是要找出所有的类，在 Spring 中用于依赖注入，Hutool 在 ")),a("a",k,[n[5]||(n[5]=s("Hulu")),e(t)]),n[7]||(n[7]=s(" 中则用于找到Action类。当然，你也可以传一个")),n[8]||(n[8]=a("code",null,"ClassFilter",-1)),n[9]||(n[9]=s("对象，用于过滤不需要的类。"))]),n[15]||(n[15]=p(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 6 scanPackage</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//扫描指定包下的所有类</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> classes <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">scanPackage</span><span class="token punctuation">(</span><span class="token string">&quot;cn.hutool.core.util&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> aClass <span class="token operator">:</span> classes<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test6--aClass==&gt;&quot;</span><span class="token operator">+</span>aClass<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test6--aClass==&gt;class cn.hutool.core.util.EnumUtil</span></span>
<span class="line">        <span class="token comment">//test6--aClass==&gt;class cn.hutool.core.util.CreditCodeUtil</span></span>
<span class="line">        <span class="token comment">//test6--aClass==&gt;class cn.hutool.core.util.ModifierUtil$ModifierType</span></span>
<span class="line">        <span class="token comment">//...</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑦ getClassPaths 方法</strong></p><p>此方法是获得当前线程的 ClassPath ，核心是 <code>Thread.currentThread().getContextClassLoader().getResources</code> 的调用。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 7 getClassPaths</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test7</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//获取类路径</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> classPaths <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getClassPaths</span><span class="token punctuation">(</span><span class="token string">&quot;cn.hutool.core.util&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> classPath <span class="token operator">:</span> classPaths<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test7--classPath==&gt;&quot;</span><span class="token operator">+</span>classPath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test7--classPath==&gt;file:/E:/maven/repository/repository/cn/hutool/hutool-all/5.8.25/hutool-all-5.8.25.jar!/cn/hutool/core/util</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑧ getJavaClassPaths 方法</strong></p><p>此方法用于获得 Java 的系统变量定义的 ClassPath。</p><p>​</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 8 getJavaClassPaths</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//获取Java类路径</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> javaClassPaths <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getJavaClassPaths</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> javaClassPath <span class="token operator">:</span> javaClassPaths<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test8--javaClassPath==&gt;&quot;</span><span class="token operator">+</span>javaClassPath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test8--javaClassPath==&gt;E:\\Study\\JavaSkill\\Hutool\\target\\classes</span></span>
<span class="line">        <span class="token comment">//test8--javaClassPath==&gt;E:\\maven\\repository\\repository\\org\\springframework\\boot\\spring-boot-starter\\3.3.1\\spring-boot-starter-3.3.1.jar</span></span>
<span class="line">        <span class="token comment">//test8--javaClassPath==&gt;E:\\maven\\repository\\repository\\org\\springframework\\boot\\spring-boot\\3.3.1\\spring-boot-3.3.1.jar</span></span>
<span class="line">        <span class="token comment">//...</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><p><strong>⑨ getClassLoader 和 getContextClassLoader 方法</strong></p><p>后者只是获得当前线程的 ClassLoader ，前者在获取失败的时候获取 ClassUtil 这个类的 ClassLoader 。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 9  getClassLoader 和 getContextClassLoader 方法</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test9</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ClassLoader</span> classLoader <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test9--classLoader==&gt;&quot;</span><span class="token operator">+</span>classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">ClassLoader</span> contextClassLoader <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test9--contextClassLoader==&gt;&quot;</span><span class="token operator">+</span>contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test9--classLoader==&gt;jdk.internal.loader.ClassLoaders$AppClassLoader@2b193f2d</span></span>
<span class="line">        <span class="token comment">//test9--contextClassLoader==&gt;jdk.internal.loader.ClassLoaders$AppClassLoader@2b193f2d</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑩ getDefaultValue</strong></p><p>获取指定类型的默认值，默认值规则为：</p><ol><li>如果为原始类型，返回 0 （boolean 类型返回 false）</li><li>非原始类型返回 null</li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 10 getDefaultValue</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test10</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//获取默认值</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Object</span> defaultValue <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getDefaultValue</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test10--defaultValue==&gt;&quot;</span><span class="token operator">+</span>defaultValue<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Object</span> defaultValue1 <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getDefaultValue</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test10--defaultValue1==&gt;&quot;</span><span class="token operator">+</span>defaultValue1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Object</span> defaultValue2 <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getDefaultValue</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test10--defaultValue2==&gt;&quot;</span><span class="token operator">+</span>defaultValue2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Object</span> defaultValue3 <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getDefaultValue</span><span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test10--defaultValue3==&gt;&quot;</span><span class="token operator">+</span>defaultValue3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Object</span> defaultValue4 <span class="token operator">=</span> <span class="token class-name">ClassUtil</span><span class="token punctuation">.</span><span class="token function">getDefaultValue</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test10--defaultValue4==&gt;&quot;</span><span class="token operator">+</span>defaultValue3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test10--defaultValue==&gt;null</span></span>
<span class="line">        <span class="token comment">//test10--defaultValue1==&gt;null</span></span>
<span class="line">        <span class="token comment">//test10--defaultValue2==&gt;0</span></span>
<span class="line">        <span class="token comment">//test10--defaultValue3==&gt;false</span></span>
<span class="line">        <span class="token comment">//test10--defaultValue4==&gt;false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑪ 其他</strong></p><p>更多详细的方法描述见：</p>`,18)),a("p",null,[a("a",d,[n[10]||(n[10]=s("https://apidoc.gitee.com/loolly/hutool/cn/hutool/core/util/ClassUtil.html")),e(t)])]),n[16]||(n[16]=p(`<h2 id="_14-枚举工具-enumutil" tabindex="-1"><a class="header-anchor" href="#_14-枚举工具-enumutil"><span>⑭ 枚举工具-EnumUtil</span></a></h2><h3 id="_1-介绍-1" tabindex="-1"><a class="header-anchor" href="#_1-介绍-1"><span>1 介绍</span></a></h3><p>枚举（enum）算一种 语法糖，是指一个经过排序的、被打包成一个单一实体的项列表。一个枚举的实例可以使用枚举项列表中任意单一项的值。枚举在各个语言当中都有广泛的应用，通常用来表示诸如颜色、方式、类别、状态等等数目有限、形式离散、表达又极为明确的量。Java 从 JDK5 开始，引入了对枚举的支持。</p><p><code>EnumUtil</code> 用于对未知枚举类型进行操作。</p><h3 id="_2-方法" tabindex="-1"><a class="header-anchor" href="#_2-方法"><span>2 方法</span></a></h3><p>首先我们定义一个枚举对象：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//定义枚举</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">TestEnum</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token function">TEST1</span><span class="token punctuation">(</span><span class="token string">&quot;type1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">TEST2</span><span class="token punctuation">(</span><span class="token string">&quot;type2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">TEST3</span><span class="token punctuation">(</span><span class="token string">&quot;type3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	</span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">TestEnum</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	</span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">String</span> type<span class="token punctuation">;</span></span>
<span class="line">	</span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>① getNames</strong></p><p>获取枚举类中所有枚举对象的 name 列表。例子：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> names <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getNames</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//结果：[TEST1, TEST2, TEST3]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 1 getNames</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//获取枚举的所有名称，返回数组</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> names <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getNames</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--names==&gt;&quot;</span><span class="token operator">+</span>names<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test1--names==&gt;[TEST1, TEST2, TEST3]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>② getFieldValues</strong></p><p>获的枚举类中个枚举对象下指定字段的值，例子：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> types <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getFieldValues</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//结果：[type1,type2,type3]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 2 getFieldValues</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//获取枚举的所有字段值，返回数组</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> type <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getFieldValues</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test2--type==&gt;&quot;</span><span class="token operator">+</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test2--fieldValues==&gt;[type1, type2, type3]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>③ getBy</strong></p><p>根据传入 Lambda 和值 获得对应枚举。例子：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">TestEnum</span> testEnum <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getBy</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token operator">::</span><span class="token function">ordinal</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//结果：TEST2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 3 getBy</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//根据字段值获取枚举 根据传入 Lambda 和值 获得对应枚举。</span></span>
<span class="line">        <span class="token class-name">TestEnum</span> testEnum <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getBy</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token operator">::</span><span class="token function">ordinal</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test3--testEnum==&gt;&quot;</span><span class="token operator">+</span>testEnum<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test3--testEnum==&gt;TEST1</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>④ getFieldBy</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> type <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getFieldBy</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token operator">::</span><span class="token function">getType</span><span class="token punctuation">,</span><span class="token class-name">Enum</span><span class="token operator">::</span><span class="token function">ordinal</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//结果：&quot;type2&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 4 getFieldBy</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//根据字段值获取枚举 根据传入 Lambda 和值 获得对应枚举。</span></span>
<span class="line">        <span class="token class-name">TestEnum</span> testEnum <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getBy</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token operator">::</span><span class="token function">getType</span><span class="token punctuation">,</span><span class="token string">&quot;type1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test4--testEnum==&gt;&quot;</span><span class="token operator">+</span>testEnum<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test4--testEnum==&gt;TEST1</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑤ getEnumMap</strong></p><p>获取枚举字符串值和枚举对象的 Map 对应，使用 LinkedHashMap 保证有序，结果中间为枚举名，值为枚举对象。例子：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">TestEnum</span><span class="token punctuation">&gt;</span></span> enumMap <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getEnumMap</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">enumMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;TEST1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//结果：TestEnum.TEST1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 5 getEnumMap</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//获取枚举的所有枚举对象，返回Map</span></span>
<span class="line">        <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">TestEnum</span><span class="token punctuation">&gt;</span></span> enumMap <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getEnumMap</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test5--enumMap==&gt;&quot;</span><span class="token operator">+</span>enumMap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test5--enumMap==&gt;{TEST1=TEST1, TEST2=TEST2, TEST3=TEST3}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑥ getNameFieldMap</strong></p><p>获得枚举名对应指定字段的 Map，键为枚举名，值为字段值。例子：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> enumMap <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getNameFieldMap</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">enumMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;TEST1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//结果：type1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 6 getNameFieldMap</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//获取枚举的所有名称和字段值，返回Map</span></span>
<span class="line">        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> type <span class="token operator">=</span> <span class="token class-name">EnumUtil</span><span class="token punctuation">.</span><span class="token function">getNameFieldMap</span><span class="token punctuation">(</span><span class="token class-name">TestEnum</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test6--type==&gt;&quot;</span><span class="token operator">+</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test6--type==&gt;{TEST1=type1, TEST2=type2, TEST3=type3}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_15-命令行工具-runtimeutil" tabindex="-1"><a class="header-anchor" href="#_15-命令行工具-runtimeutil"><span>⑮ 命令行工具-RuntimeUtil</span></a></h2><h3 id="_1-介绍-2" tabindex="-1"><a class="header-anchor" href="#_1-介绍-2"><span>1 介绍</span></a></h3><p>在 Java 世界中，如果想与其他语言打交道，处理调用接口，或者 JNI，就是通过本地命令方式调用了。Hutool 封装了 JDK 的 Process 类，用于执行命令行命令（在 Windows 下是 cmd，在 Linux 下是 Shell 命令）。</p><h3 id="_2-方法-1" tabindex="-1"><a class="header-anchor" href="#_2-方法-1"><span>2 方法</span></a></h3><p><strong>① 基础方法</strong></p><ul><li>exec 执行命令行命令，返回 Process 对象，Process 可以读取执行命令后的返回内容的流</li></ul><p><strong>② 快捷方法</strong></p><ul><li>execForStr 执行系统命令，返回字符串</li><li>execForLines 执行系统命令，返回行列表</li></ul><h3 id="_3-使用" tabindex="-1"><a class="header-anchor" href="#_3-使用"><span>3 使用</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token class-name">RuntimeUtil</span><span class="token punctuation">.</span><span class="token function">execForStr</span><span class="token punctuation">(</span><span class="token string">&quot;ipconfig&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行这个命令后，在 Windows 下可以获取网卡信息。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 命令行工具-RuntimeUtil</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> command <span class="token operator">=</span> <span class="token string">&quot;cmd /c dir&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token class-name">RuntimeUtil</span><span class="token punctuation">.</span><span class="token function">execForStr</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--result==&gt;&quot;</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringList <span class="token operator">=</span> <span class="token class-name">RuntimeUtil</span><span class="token punctuation">.</span><span class="token function">execForLines</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--stringList==&gt;&quot;</span><span class="token operator">+</span>stringList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token class-name">RuntimeUtil</span><span class="token punctuation">.</span><span class="token function">execForStr</span><span class="token punctuation">(</span><span class="token string">&quot;ipconfig&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--str==&gt;&quot;</span><span class="token operator">+</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_16-数字工具-numberutil" tabindex="-1"><a class="header-anchor" href="#_16-数字工具-numberutil"><span>⑯ 数字工具-NumberUtil</span></a></h2><h3 id="_1-由来" tabindex="-1"><a class="header-anchor" href="#_1-由来"><span>1 由来</span></a></h3><p>数学工具针对数学运算做工具性封装</p><h3 id="_2-使用-1" tabindex="-1"><a class="header-anchor" href="#_2-使用-1"><span>2 使用</span></a></h3><p><strong>① 加减乘除</strong></p><ul><li><code>NumberUtil.add</code> 针对数字类型做加法</li><li><code>NumberUtil.sub</code> 针对数字类型做减法</li><li><code>NumberUtil.mul</code> 针对数字类型做乘法</li><li><code>NumberUtil.div</code> 针对数字类型做除法，并提供重载方法用于规定除不尽的情况下保留小数位数和舍弃方式。</li></ul><p>以上四种运算都会将 double 转为 BigDecimal 后计算，解决float和double类型无法进行精确计算的问题。这些方法常用于商业计算。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 1.加减乘除</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 加法</span></span>
<span class="line">        <span class="token keyword">double</span> add <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--add==&gt;&quot;</span><span class="token operator">+</span>add<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 减法</span></span>
<span class="line">        <span class="token keyword">double</span> sub <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--sub==&gt;&quot;</span><span class="token operator">+</span>sub<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 乘法</span></span>
<span class="line">        <span class="token keyword">double</span> mul <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">mul</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--mul==&gt;&quot;</span><span class="token operator">+</span>mul<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 除法，并提供重载方法用于规定除不尽的情况下保留小数位数和舍弃方式</span></span>
<span class="line">        <span class="token keyword">double</span> div <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--div==&gt;&quot;</span><span class="token operator">+</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">double</span> div2 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--div2==&gt;&quot;</span><span class="token operator">+</span>div2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test1--add==&gt;3.0</span></span>
<span class="line">        <span class="token comment">//test1--sub==&gt;-1.0</span></span>
<span class="line">        <span class="token comment">//test1--mul==&gt;2.0</span></span>
<span class="line">        <span class="token comment">//test1--div==&gt;0.5</span></span>
<span class="line">        <span class="token comment">//test1--div2==&gt;0.333333</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>② 保留小数</strong></p><p>保留小数的方法主要有两种：</p><ul><li><p><code>NumberUtil.round</code> 方法主要封装 BigDecimal 中的方法来保留小数，返回 BigDecimal，这个方法更加灵活，可以选择四舍五入或者全部舍弃等模式。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">double</span> te1<span class="token operator">=</span><span class="token number">123456.123456</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">double</span> te2<span class="token operator">=</span><span class="token number">123456.128456</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span>te1<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果:123456.1235</span></span>
<span class="line"><span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span>te2<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果:123456.1285</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>NumberUtil.roundStr 方法主要封装 String.format 方法，舍弃方式采用四舍五入。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">double</span> te1<span class="token operator">=</span><span class="token number">123456.123456</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">double</span> te2<span class="token operator">=</span><span class="token number">123456.128456</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">roundStr</span><span class="token punctuation">(</span>te1<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果:123456.12</span></span>
<span class="line"><span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">roundStr</span><span class="token punctuation">(</span>te2<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果:123456.13                                                                             </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 2.保留小数</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//\`NumberUtil.round\` 方法主要封装 BigDecimal 中的方法来保留小数，</span></span>
<span class="line">        <span class="token comment">//返回 BigDecimal，这个方法更加灵活，可以选择四舍五入或者全部舍弃等模式</span></span>
<span class="line">        <span class="token keyword">double</span> te1<span class="token operator">=</span><span class="token number">123456.123456</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">double</span> te2<span class="token operator">=</span><span class="token number">123456.128456</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//结果:123456.1235</span></span>
<span class="line">        <span class="token class-name">BigDecimal</span> round1 <span class="token operator">=</span> <span class="token function">round</span><span class="token punctuation">(</span>te1<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test2--round1==&gt;&quot;</span><span class="token operator">+</span>round1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//结果:123456.1285</span></span>
<span class="line">        <span class="token class-name">BigDecimal</span> round2 <span class="token operator">=</span> <span class="token function">round</span><span class="token punctuation">(</span>te2<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test2--round2==&gt;&quot;</span><span class="token operator">+</span>round2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//NumberUtil.roundStr 方法主要封装 String.format 方法，舍弃方式采用四舍五入。</span></span>
<span class="line">        <span class="token keyword">double</span> te3<span class="token operator">=</span><span class="token number">123456.123456</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">double</span> te4<span class="token operator">=</span><span class="token number">123456.128456</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//结果:123456.12</span></span>
<span class="line">        <span class="token class-name">String</span> roundStr1 <span class="token operator">=</span> <span class="token function">roundStr</span><span class="token punctuation">(</span>te3<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test2--roundStr1==&gt;&quot;</span><span class="token operator">+</span>roundStr1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//结果:123456.13</span></span>
<span class="line">        <span class="token class-name">String</span> roundStr2 <span class="token operator">=</span> <span class="token function">roundStr</span><span class="token punctuation">(</span>te4<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test2--roundStr2==&gt;&quot;</span><span class="token operator">+</span>roundStr2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test2--round1==&gt;123456.1235</span></span>
<span class="line">        <span class="token comment">//test2--round2==&gt;123456.1285</span></span>
<span class="line">        <span class="token comment">//test2--roundStr1==&gt;123456.12</span></span>
<span class="line">        <span class="token comment">//test2--roundStr2==&gt;123456.13</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>③ decimalFormat</strong></p><p>针对 <code>DecimalFormat.format</code> 进行简单封装。按照固定格式对 double 或 long 类型的数字做格式化操作。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">long</span> c<span class="token operator">=</span><span class="token number">299792458</span><span class="token punctuation">;</span><span class="token comment">//光速</span></span>
<span class="line"><span class="token class-name">String</span> format <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">decimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;,###&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//299,792,458</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>格式中主要以 # 和 0 两种占位符号来指定数字长度。0 表示如果位数不足则以 0 填充，# 表示只要有可能就把数字拉上这个位置。</p><ul><li>0 -&gt; 取一位整数</li><li>0.00 -&gt; 取一位整数和两位小数</li><li>00.000 -&gt; 取两位整数和三位小数</li><li># -&gt; 取所有整数部分</li><li>#.##% -&gt; 以百分比方式计数，并取两位小数</li><li>#.#####E0 -&gt; 显示为科学计数法，并取五位小数</li><li>,### -&gt; 每三位以逗号进行分隔，例如：299,792,458</li><li>光速大小为每秒,###米 -&gt; 将格式嵌入文本</li></ul>`,59)),a("p",null,[n[12]||(n[12]=s("关于格式的更多说明，请参阅：")),a("a",m,[n[11]||(n[11]=s("Java DecimalFormat的主要功能及使用方法")),e(t)])]),n[17]||(n[17]=p(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 3.decimalFormat</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//光速</span></span>
<span class="line">        <span class="token keyword">long</span> c<span class="token operator">=</span><span class="token number">299792458</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//299,792,458</span></span>
<span class="line">        <span class="token class-name">String</span> format <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">decimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;,###&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test3--format==&gt;&quot;</span><span class="token operator">+</span>format<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//0 -&gt; 取一位整数</span></span>
<span class="line">        <span class="token comment">//0.00 -&gt; 取一位整数和两位小数</span></span>
<span class="line">        <span class="token comment">//00.000 -&gt; 取两位整数和三位小数</span></span>
<span class="line">        <span class="token comment">//# -&gt; 取所有整数部分</span></span>
<span class="line">        <span class="token comment">//#.##% -&gt; 以百分比方式计数，并取两位小数</span></span>
<span class="line">        <span class="token comment">//#.#####E0 -&gt; 显示为科学计数法，并取五位小数</span></span>
<span class="line">        <span class="token comment">//,### -&gt; 每三位以逗号进行分隔，例如：299,792,458</span></span>
<span class="line">        <span class="token comment">//光速大小为每秒,###米 -&gt; 将格式嵌入文本</span></span>
<span class="line">        <span class="token class-name">String</span> format1 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">decimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test3--format1==&gt;&quot;</span><span class="token operator">+</span>format1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> format2 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">decimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;0.00&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test3--format2==&gt;&quot;</span><span class="token operator">+</span>format2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> format3 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">decimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;00.000&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test3--format3==&gt;&quot;</span><span class="token operator">+</span>format3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> format4 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">decimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test3--format4==&gt;&quot;</span><span class="token operator">+</span>format4<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> format5 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">decimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;#.##%&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test3--format5==&gt;&quot;</span><span class="token operator">+</span>format5<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> format6 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">decimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;#.#####E0&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test3--format6==&gt;&quot;</span><span class="token operator">+</span>format6<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> format7 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">decimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;,###&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test3--format7==&gt;&quot;</span><span class="token operator">+</span>format7<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> format8 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">decimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;光速大小为每秒,###米&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test3--format8==&gt;&quot;</span><span class="token operator">+</span>format8<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test3--format==&gt;299,792,458</span></span>
<span class="line">        <span class="token comment">//test3--format1==&gt;299792458</span></span>
<span class="line">        <span class="token comment">//test3--format2==&gt;299792458.00</span></span>
<span class="line">        <span class="token comment">//test3--format3==&gt;299792458.000</span></span>
<span class="line">        <span class="token comment">//test3--format4==&gt;299792458</span></span>
<span class="line">        <span class="token comment">//test3--format5==&gt;29979245800%</span></span>
<span class="line">        <span class="token comment">//test3--format6==&gt;2.99792E8</span></span>
<span class="line">        <span class="token comment">//test3--format7==&gt;299,792,458</span></span>
<span class="line">        <span class="token comment">//test3--format8==&gt;光速大小为每秒299,792,458米</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>④ 校验数字</strong></p><ul><li><code>NumberUtil.isNumber</code> 是否为数字</li><li>NumberUtil.isInteger 是否为整数</li><li>NumberUtil.isDouble 是否为浮点数</li><li>NumberUtil.isPrimes 是否为质数</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 4.校检数字</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//判断是否为数字</span></span>
<span class="line">        <span class="token keyword">boolean</span> isNumber <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test4--isNumber==&gt;&quot;</span><span class="token operator">+</span>isNumber<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//判断是否为整数</span></span>
<span class="line">        <span class="token keyword">boolean</span> isInteger <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test4--isInteger==&gt;&quot;</span><span class="token operator">+</span>isInteger<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//判断是否为小数</span></span>
<span class="line">        <span class="token keyword">boolean</span> isDouble <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">isDouble</span><span class="token punctuation">(</span><span class="token string">&quot;123.123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test4--isDouble==&gt;&quot;</span><span class="token operator">+</span>isDouble<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//判断是否为质数</span></span>
<span class="line">        <span class="token keyword">boolean</span> isPrimes <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">isPrimes</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test4--isPrimes==&gt;&quot;</span><span class="token operator">+</span>isPrimes<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//判断是否为质数</span></span>
<span class="line">        <span class="token keyword">boolean</span> isPrimes1 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">isPrimes</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test4--isPrimes1==&gt;&quot;</span><span class="token operator">+</span>isPrimes1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test4--isNumber==&gt;true</span></span>
<span class="line">        <span class="token comment">//test4--isInteger==&gt;true</span></span>
<span class="line">        <span class="token comment">//test4--isDouble==&gt;true</span></span>
<span class="line">        <span class="token comment">//test4--isPrimes==&gt;false</span></span>
<span class="line">        <span class="token comment">//test4--isPrimes1==&gt;true</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑤ 随机数</strong></p><ul><li>NumberUtil.generateRandomNumber 生成不重复随机数，根据给定的最小数字和最大数字，以及随机数的个数，产生指定的不重复的数组。</li><li>NumberUtil.generateBySet 生成不重复随机数，根据给定的最小数字和最大数字，以及随机数的个数，产生指定的不重复的数组。</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 5.随机数</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//generateRandomNumber: 适用于小范围、少量随机数的生成，返回 int[]。</span></span>
<span class="line">        <span class="token comment">//generateBySet: 适用于大范围、大量随机数的生成，返回 Integer[]。</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//NumberUtil.generateRandomNumber 生成不重复随机数</span></span>
<span class="line">        <span class="token comment">//根据给定的最小数字和最大数字，以及随机数的个数，产生指定的不重复的数组</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">generateRandomNumber</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test5--ints==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>ints<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//NumberUtil.generateBySet 生成不重复随机数</span></span>
<span class="line">        <span class="token comment">//根据给定的最小数字和最大数字，以及随机数的个数，产生指定的不重复的数组</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints2 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">generateBySet</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test5--ints2==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>ints2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑥ 整数列表</strong></p><p>NumberUtil.range 方法根据范围和步进，生成一个有序整数列表。NumberUtil.appendRange 将给定范围内的整数添加到已有集合中</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 6.整数列表</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//NumberUtil.range 生成整数列表</span></span>
<span class="line">        <span class="token comment">//生成从 start 到 end 的整数列表，步长为 step 2</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test6--ints==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>ints<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//NumberUtil.range 生成整数列表</span></span>
<span class="line">        <span class="token comment">//生成从 start 到 end 的整数列表，步长为 step 3</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints1 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test6--ints1==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>ints1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//NumberUtil.range 生成整数列表</span></span>
<span class="line">        <span class="token comment">//生成从 start 到 end 的整数列表，步长为 step 4</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints2 <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test6--ints2==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>ints2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test6--ints==&gt;[1, 3, 5, 7, 9]</span></span>
<span class="line">        <span class="token comment">//test6--ints1==&gt;[1, 4, 7, 10]</span></span>
<span class="line">        <span class="token comment">//test6--ints2==&gt;[1, 5, 9]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑦ 其它</strong></p><ul><li><code>NumberUtil.factorial</code> 阶乘</li><li><code>NumberUtil.sqrt</code> 平方根</li><li><code>NumberUtil.divisor</code> 最大公约数</li><li><code>NumberUtil.multiple</code> 最小公倍数</li><li><code>NumberUtil.getBinaryStr</code> 获得数字对应的二进制字符串</li><li><code>NumberUtil.binaryToInt</code> 二进制转int</li><li><code>NumberUtil.binaryToLong</code> 二进制转long</li><li><code>NumberUtil.compare</code> 比较两个值的大小</li><li><code>NumberUtil.toStr</code> 数字转字符串，并自动去除尾小数点儿后多余的0</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 7.其他</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test7</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//- \`NumberUtil.factorial\` 阶乘</span></span>
<span class="line">        <span class="token comment">//- \`NumberUtil.sqrt\` 平方根</span></span>
<span class="line">        <span class="token comment">//- \`NumberUtil.divisor\` 最大公约数</span></span>
<span class="line">        <span class="token comment">//- \`NumberUtil.multiple\` 最小公倍数</span></span>
<span class="line">        <span class="token comment">//- \`NumberUtil.getBinaryStr\` 获得数字对应的二进制字符串</span></span>
<span class="line">        <span class="token comment">//- \`NumberUtil.binaryToInt\` 二进制转int</span></span>
<span class="line">        <span class="token comment">//- \`NumberUtil.binaryToLong\` 二进制转long</span></span>
<span class="line">        <span class="token comment">//- \`NumberUtil.compare\` 比较两个值的大小</span></span>
<span class="line">        <span class="token comment">//- \`NumberUtil.toStr\` 数字转字符串，并自动去除尾小数点儿后多余的0</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">long</span> factorial <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">factorial</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test7--factorial==&gt;&quot;</span><span class="token operator">+</span>factorial<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">double</span> sqrt <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test7--sqrt==&gt;&quot;</span><span class="token operator">+</span>sqrt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">long</span> divisor <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">divisor</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test7--divisor==&gt;&quot;</span><span class="token operator">+</span>divisor<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">long</span> multiple <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">multiple</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test7--multiple==&gt;&quot;</span><span class="token operator">+</span>multiple<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> binaryStr <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">getBinaryStr</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test7--binaryStr==&gt;&quot;</span><span class="token operator">+</span>binaryStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span> binaryToInt <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">binaryToInt</span><span class="token punctuation">(</span><span class="token string">&quot;1010&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test7--binaryToInt==&gt;&quot;</span><span class="token operator">+</span>binaryToInt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">long</span> binaryToLong <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">binaryToLong</span><span class="token punctuation">(</span><span class="token string">&quot;1010&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test7--binaryToLong==&gt;&quot;</span><span class="token operator">+</span>binaryToLong<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span> compare <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test7--compare==&gt;&quot;</span><span class="token operator">+</span>compare<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> toStr <span class="token operator">=</span> <span class="token class-name">NumberUtil</span><span class="token punctuation">.</span><span class="token function">toStr</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test7--toStr==&gt;&quot;</span><span class="token operator">+</span>toStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test7--factorial==&gt;120</span></span>
<span class="line">        <span class="token comment">//test7--sqrt==&gt;3.0</span></span>
<span class="line">        <span class="token comment">//test7--divisor==&gt;2</span></span>
<span class="line">        <span class="token comment">//test7--multiple==&gt;10</span></span>
<span class="line">        <span class="token comment">//test7--binaryStr==&gt;1010</span></span>
<span class="line">        <span class="token comment">//test7--binaryToInt==&gt;10</span></span>
<span class="line">        <span class="token comment">//test7--binaryToLong==&gt;10</span></span>
<span class="line">        <span class="token comment">//test7--compare==&gt;-1</span></span>
<span class="line">        <span class="token comment">//test7--toStr==&gt;10</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_17-数组工具-arrayutil" tabindex="-1"><a class="header-anchor" href="#_17-数组工具-arrayutil"><span>⑰ 数组工具-ArrayUtil</span></a></h2><h3 id="_1-介绍-3" tabindex="-1"><a class="header-anchor" href="#_1-介绍-3"><span>1 介绍</span></a></h3><p>数组工具类主要针对原始类型数组和泛型数组相关方法进行封装。</p><p>数组工具类主要是解决对象数组（包括包装类型数组）和原始类型数组使用方法不统一的问题。</p><h3 id="_2-方法-2" tabindex="-1"><a class="header-anchor" href="#_2-方法-2"><span>2 方法</span></a></h3><p><strong>① 判空</strong></p><p>数组的判空类似于字符串的判空，标准是 null 或者数组长度为 0 ，ArrayUtil 中封装了针对原始类型和泛型数组的判空和判非空：</p><ol><li><p>判断空</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>判断非空</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 1.判空</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//判空</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">boolean</span> a1 <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">boolean</span> b1 <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--a1==&gt;&quot;</span><span class="token operator">+</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--b1==&gt;&quot;</span><span class="token operator">+</span>b1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//判非空</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> c <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">boolean</span> c1 <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1--c1==&gt;&quot;</span><span class="token operator">+</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test1--a1==&gt;true</span></span>
<span class="line">        <span class="token comment">//test1--b1==&gt;true</span></span>
<span class="line">        <span class="token comment">//test1--c1==&gt;true</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>② 新建泛型数组</strong></p><p><code>Array.newInstance</code> 并不支持泛型返回值，在此封装此方法便使之支持泛型返回值。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">newArray</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 2.新建泛型数组</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//新建泛型数组</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringNewArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">newArray</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        stringNewArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        stringNewArray<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        stringNewArray<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test2--newArray==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>stringNewArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intNewArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">newArray</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        intNewArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">        intNewArray<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">        intNewArray<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span></span>
<span class="line">        intNewArray<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test2--objects==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>intNewArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test2--newArray==&gt;[a, b, c]</span></span>
<span class="line">        <span class="token comment">//test2--objects==&gt;[1, 2, 3, 4, null]</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>③ 调整大小</strong></p><p>使用 <code>ArrayUtil.resize</code> 方法生成一个新的重新设置大小的数组。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 3.调整大小</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//使用 \`ArrayUtil.resize\` 方法生成一个新的重新设置大小的数组</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringResizeArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>stringArray<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test3--stringResizeArray==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>stringResizeArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intResizeArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>intArray<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test3--intResizeArray==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>intResizeArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test3--stringResizeArray==&gt;[a, b, c, null, null]</span></span>
<span class="line">        <span class="token comment">//test3--intResizeArray==&gt;[1, 2, 3]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>④ 合并数组</strong></p><p><code>ArrayUtil.addAll</code> 方法采用可变参数方式，将多个泛型数组合并为一个数组。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 4.合并数组</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//使用 \`ArrayUtil.addAll\` 方法合并两个数组</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringArray2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringAddAllArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>stringArray<span class="token punctuation">,</span> stringArray2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test4--stringAddAllArray==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>stringAddAllArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intArray2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intAddAllArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>intArray<span class="token punctuation">,</span> intArray2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test4--intAddAllArray==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>intAddAllArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test4--stringAddAllArray==&gt;[a, b, c, 1, 2, 3]</span></span>
<span class="line">        <span class="token comment">//test4--intAddAllArray==&gt;[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑤ 克隆</strong></p><p>数组本身支持 clone 方法，因此确定为某种类型数组时调用 <code>ArrayUtil.clone(T[])</code> ，不确定类型的使用 <code>ArrayUtil.clone(T)</code>，两种重载方法在实现上有所不同，但是在使用中并不能感知出差别。</p><ol><li><p>泛型数组调用原生克隆</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cloneB <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertArrayEquals</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>cloneB<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>非泛型数组（原始类型数组）调用第二种重载方法</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> clone <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertArrayEquals</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>clone<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 5.克隆</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//泛型数组调用原生克隆</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cloneB <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//判断是否是同一个对象</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test5--b==&gt;&quot;</span><span class="token operator">+</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> cloneB<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//判断是否等值</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test5--b==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> cloneB<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test5--cloneB==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>cloneB<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//非泛型数组（原始类型数组）调用第二种重载方法</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> clone <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//判断是否是同一个对象</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test5--a==&gt;&quot;</span><span class="token operator">+</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> clone<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//判断是否等值</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test5--a==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> clone<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test5--clone==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>clone<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test5--b==&gt;false</span></span>
<span class="line">        <span class="token comment">//test5--b==&gt;true</span></span>
<span class="line">        <span class="token comment">//test5--cloneB==&gt;[1, 2, 3]</span></span>
<span class="line">        <span class="token comment">//test5--a==&gt;false</span></span>
<span class="line">        <span class="token comment">//test5--a==&gt;true</span></span>
<span class="line">        <span class="token comment">//test5--clone==&gt;[1, 2, 3]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑥ 有序列表生成</strong></p><p>ArrayUtil.range 方法有三个重载，这三个重载配合可以实现支持步进的有序数组或者步进为 1 的有序数组。这种列表生成器在 Python 中做为语法糖存在。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 6.有序列表生成</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//使用 \`ArrayUtil.range\` 方法生成有序列表</span></span>
<span class="line">        <span class="token comment">//生成从 start 到 end 的整数列表，步长为 step 2</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test6--ints==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>ints<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//生成从 start 到 end 的整数列表，步长为 step 3</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints1 <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test6--ints1==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>ints1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test6--ints==&gt;[1, 3, 5, 7, 9]</span></span>
<span class="line">        <span class="token comment">//test6--ints1==&gt;[1, 4, 7]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑦ 拆分数组</strong></p><p><code>ArrayUtil.split</code> 方法用于拆分一个 byte 数组，将 byte 数组平均分成几等份，常用于消息拆分。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 7.拆分数组</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test7</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//ArrayUtil.split</span></span>
<span class="line">        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteSplitArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> byteSplitArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test7--byteArray&quot;</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">&quot;==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>byteSplitArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test7--byteArray0==&gt;[1, 2, 3]</span></span>
<span class="line">        <span class="token comment">//test7--byteArray1==&gt;[4, 5, 6]</span></span>
<span class="line">        <span class="token comment">//test7--byteArray2==&gt;[7, 8, 9]</span></span>
<span class="line">        <span class="token comment">//test7--byteArray3==&gt;[10]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑧ 过滤</strong></p><p><code>ArrayUtil.filter</code> 方法用于过滤已有数组元素，只针对泛型数组操作，原始类型数组并未提供。方法中 Filter 接口用于返回 boolean 值决定是否保留。</p><ol><li><p>过滤数组，只保留偶数</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [2,4,6]</span></span>
<span class="line"><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> filter <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Editor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> t <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>t <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> t <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>对于已有数组编辑，获得编辑后的值</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [1, 20, 3, 40, 5, 60]</span></span>
<span class="line"><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> filter <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Editor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> t <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>t <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> t <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">:</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 8.过滤</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//使用 \`ArrayUtil.filter\` 方法过滤数组</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;f&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;g&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;h&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;i&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;j&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringFilterArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>stringArray<span class="token punctuation">,</span></span>
<span class="line">                s <span class="token operator">-&gt;</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test8--stringFilterArray==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>stringFilterArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//过滤数组，只保留偶数</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intFilterArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>intArray<span class="token punctuation">,</span></span>
<span class="line">                i <span class="token operator">-&gt;</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test8--intFilterArray==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>intFilterArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//对已有数组编辑，获得编辑后的值</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// [1, 20, 3, 40, 5, 60]</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span></span>
<span class="line">                i <span class="token operator">-&gt;</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> i <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">:</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test8--b==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test8--stringFilterArray==&gt;[a, b, c]</span></span>
<span class="line">        <span class="token comment">//test8--intFilterArray==&gt;[2, 4, 6, 8, 10]</span></span>
<span class="line">        <span class="token comment">//test8--b==&gt;[1, 20, 3, 40, 5, 60]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑨ 编辑</strong></p><p>修改元素对象，此方法会修改原数组。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [1, 20, 3, 40, 5, 60]</span></span>
<span class="line"><span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> t <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>t <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> t <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">:</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 9.编辑</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test9</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//对已有数组编辑，获得编辑后的值</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// [1, 20, 3, 40, 5, 60]</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span></span>
<span class="line">                i <span class="token operator">-&gt;</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> i <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">:</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test9--b==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test9--b==&gt;[1, 20, 3, 40, 5, 60]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑩ zip</strong></p><p><code>ArrayUtil.zip</code> 方法传入两个数组，第一个数组为 key ，第二个数组对应位置为 value ，此方法在 Python 中为 zip() 函数。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keys <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> values<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//{a=1, b=2, c=3}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 10.zip</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test10</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//使用 \`ArrayUtil.zip\` 方法将两个数组合并成一个数组</span></span>
<span class="line">        <span class="token comment">//\`ArrayUtil.zip\` 方法传入两个数组，第一个数组为 key</span></span>
<span class="line">        <span class="token comment">//第二个数组对应位置为 value ，此方法在 Python 中为 zip() 函数</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> zip <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">(</span>stringArray<span class="token punctuation">,</span> intArray<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test10--zip==&gt;&quot;</span><span class="token operator">+</span> zip<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test10--zip==&gt;{a=1, b=2, c=3}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑪ 是否包含元素</strong></p><p><code>ArrayUtil.contains</code> 方法只针对泛型数组，检测指定元素是否在数组中。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 11.是否包含元素</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test11</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">boolean</span> contains <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>stringArray<span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test11--contains==&gt;&quot;</span><span class="token operator">+</span> contains<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        contains <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>stringArray<span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test11--contains==&gt;&quot;</span><span class="token operator">+</span> contains<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test11--contains==&gt;true</span></span>
<span class="line">        <span class="token comment">//test11--contains==&gt;false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑫ 包装和拆包</strong></p><p>在原始类型元素和包装类型中，Java 实现了自动包装和拆包，但是相应的数组无法实现，于是便是用 ArrayUtil.wrap 和 ArrayUtil.unwrap 对原始类型数组和包装类型数组进行转换。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 12.包装和拆包</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test12</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//使用 \`ArrayUtil.wrap\` 方法将数组包装为对象数组</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> integers <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>intArray<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test12--objectArray==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>integers<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//使用 \`ArrayUtil.unWrap\` 方法将对象数组拆包为原始数组</span></span>
<span class="line">        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> integerArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">unWrap</span><span class="token punctuation">(</span>integerArray<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test12--intArray==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>ints<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test12--objectArray==&gt;[1, 2, 3]</span></span>
<span class="line">        <span class="token comment">//test12--intArray==&gt;[1, 2, 3]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑬ 判断对象是否为数组</strong></p><p><code>ArrayUtil.isArray</code> 方法封装了 <code>obj.getClass().isArray()</code></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 13.判断对象是否为数组</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test13</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">boolean</span> isArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test13--isArray==&gt;&quot;</span><span class="token operator">+</span> isArray<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        isArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test13--isArray==&gt;&quot;</span><span class="token operator">+</span> isArray<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        isArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test13--isArray==&gt;&quot;</span><span class="token operator">+</span> isArray<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">String</span> string <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        isArray <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test13--isArray==&gt;&quot;</span><span class="token operator">+</span> isArray<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test13--isArray==&gt;true</span></span>
<span class="line">        <span class="token comment">//test13--isArray==&gt;true</span></span>
<span class="line">        <span class="token comment">//test13--isArray==&gt;true</span></span>
<span class="line">        <span class="token comment">//test13--isArray==&gt;false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑭ 转为字符串</strong></p><ol><li>ArrayUtil.toString 通常原始类型的数组输出为字符串时无法正常显示，于是封装此方法可以完美兼容原始类型数组和包装类型数组的转为字符串操作。</li><li>ArrayUtil.join 方法使用间隔符将一个数组转为字符串，比如 [1,2,3,4] 这个数组转为字符串，间隔符使用&quot;-&quot; 的话，结果为 1-2-3-4，join 方法同样支持泛型数组和原始类型数组。</li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 14.转为字符串</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test14</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//ArrayUtil.toString 通常原始类型的数组输出为字符串时无法正常显示</span></span>
<span class="line">        <span class="token comment">//于是封装此方法可以完美兼容原始类型数组和包装类型数组的转为字符串操作</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intArray <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> string <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>intArray<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test14--string==&gt;&quot;</span><span class="token operator">+</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//ArrayUtil.join 方法使用间隔符将一个数组转为字符串，比如 [1,2,3,4] </span></span>
<span class="line">        <span class="token comment">//这个数组转为字符串，间隔符使用&quot;-&quot; 的话，结果为 1-2-3-4</span></span>
<span class="line">        <span class="token comment">//join 方法同样支持泛型数组和原始类型数组</span></span>
<span class="line">        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intArray1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> join <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>intArray1<span class="token punctuation">,</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test14--join==&gt;&quot;</span><span class="token operator">+</span> join<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test14--string==&gt;[1, 2, 3]</span></span>
<span class="line">        <span class="token comment">//test14--join==&gt;4-5-6</span></span>
<span class="line">        </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⑮ toArray</strong></p><p><code>ArrayUtil.toArray</code> 方法针对 ByteBuffer 转数组提供便利</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 15.toArray</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test15</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//\`ArrayUtil.toArray\` 方法针对 ByteBuffer 转数组提供便利</span></span>
<span class="line">        <span class="token class-name">ByteBuffer</span> byteBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        byteBuffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        byteBuffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        byteBuffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        byteBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test15--bytes==&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//结果：</span></span>
<span class="line">        <span class="token comment">//test15--bytes==&gt;[1, 2, 3]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,69))])}const y=l(u,[["render",v]]),f=JSON.parse('{"path":"/docs/Java/Hutool/2_Hutool_Core/8-Hutool_Core.html","title":"Hutool-Core核心（八）","lang":"en-US","frontmatter":{"title":"Hutool-Core核心（八）","date":"2024/12/29"},"headers":[{"level":2,"title":"工具类","slug":"工具类","link":"#工具类","children":[]},{"level":2,"title":"⑬ 类工具-ClassUtil","slug":"_13-类工具-classutil","link":"#_13-类工具-classutil","children":[{"level":3,"title":"1 介绍","slug":"_1-介绍","link":"#_1-介绍","children":[]},{"level":3,"title":"2 使用","slug":"_2-使用","link":"#_2-使用","children":[]}]},{"level":2,"title":"⑭ 枚举工具-EnumUtil","slug":"_14-枚举工具-enumutil","link":"#_14-枚举工具-enumutil","children":[{"level":3,"title":"1 介绍","slug":"_1-介绍-1","link":"#_1-介绍-1","children":[]},{"level":3,"title":"2 方法","slug":"_2-方法","link":"#_2-方法","children":[]}]},{"level":2,"title":"⑮ 命令行工具-RuntimeUtil","slug":"_15-命令行工具-runtimeutil","link":"#_15-命令行工具-runtimeutil","children":[{"level":3,"title":"1 介绍","slug":"_1-介绍-2","link":"#_1-介绍-2","children":[]},{"level":3,"title":"2 方法","slug":"_2-方法-1","link":"#_2-方法-1","children":[]},{"level":3,"title":"3 使用","slug":"_3-使用","link":"#_3-使用","children":[]}]},{"level":2,"title":"⑯ 数字工具-NumberUtil","slug":"_16-数字工具-numberutil","link":"#_16-数字工具-numberutil","children":[{"level":3,"title":"1 由来","slug":"_1-由来","link":"#_1-由来","children":[]},{"level":3,"title":"2 使用","slug":"_2-使用-1","link":"#_2-使用-1","children":[]}]},{"level":2,"title":"⑰ 数组工具-ArrayUtil","slug":"_17-数组工具-arrayutil","link":"#_17-数组工具-arrayutil","children":[{"level":3,"title":"1 介绍","slug":"_1-介绍-3","link":"#_1-介绍-3","children":[]},{"level":3,"title":"2 方法","slug":"_2-方法-2","link":"#_2-方法-2","children":[]}]}],"filePathRelative":"docs/Java/Hutool/2_Hutool_Core/8-Hutool_Core.md","git":{"createdTime":1735805958000,"updatedTime":1737440609000,"contributors":[{"name":"lixuan","email":"2789968443@qq.com","commits":2}]}}');export{y as comp,f as data};
