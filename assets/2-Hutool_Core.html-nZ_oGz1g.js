import{_ as t,c as a,b as o,o as l}from"./app-3xzxHrvr.js";const i={};function c(n,e){return l(),a("div",null,e[0]||(e[0]=[o('<p><img src="https://bizhi1.com/wp-content/uploads/2024/10/mount-assiniboine-provincial-park-canada-8k-c4-7680x4320-1.jpg" alt="加拿大阿西尼博因山省立公园 8k"></p><h2 id="日期和时间" tabindex="-1"><a class="header-anchor" href="#日期和时间"><span>日期和时间</span></a></h2><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>① 概述</p><p>② 日期时间工具-DateUtil</p><p>③ 日期时间对象-DateTime</p><p>④ 农历日期-ChineseDate</p><p>⑤ LocalDateTime工具-LocalDateTimeUtil</p><p>⑥ 计时器工具-TimeInterval</p></div><h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述"><span>① 概述</span></a></h2><h3 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍"><span>1 介绍</span></a></h3><p>日期时间包是 Hutool 的核心包之一，提供针对 JDK 中 Date 和 Calendar 对象的封装</p><h3 id="_2-日期时间工具" tabindex="-1"><a class="header-anchor" href="#_2-日期时间工具"><span>2 日期时间工具</span></a></h3><ul><li><code>DateUtil</code> 针对日期时间操作提供一系列静态方法。</li><li><code>DateTime</code> 提供类似于 <code>Joda-Time</code> 中日期时间对象的封装，继承自 <code>Date</code> 类，并提供更加丰富的对象方法。</li><li><code>FastDateFormat</code> 提供线程安全的针对 Date 对象的格式和日期字符串解析支持。此对象在实际使用中并不需要感知，相关操作已封装在 <code>DateUtil</code> 和 <code>DateTime</code> 的相关方法中。</li><li><code>DateBetween</code> 计算两个时间间隔的类，除了通过构造新对象外，相关操作也封装在 <code>DateUtil</code> 和 <code>DateTime</code> 的相关方法中。</li><li><code>TimeInterval</code> 一个简单的计时器类，常用于计算某段代码的执行时间，提供包括毫秒、秒、分、时、天、周等各种单位的花费时长计算，对象的静态构造已封装在 <code>DateUtil</code> 中。</li><li><code>DatePattern</code> 提供常用的日期格式化模式，包括 <code>String</code> 类型和 <code>FastDateFormat</code> 两种类型。</li></ul><h3 id="_3-日期枚举" tabindex="-1"><a class="header-anchor" href="#_3-日期枚举"><span>3 日期枚举</span></a></h3><p>考虑到 Calendar 类中表示时间的字段（field）都是使用 int 表示，在使用中非常不方便，因此针对这些 int 字段，封装了与之对应的 Enum 枚举类，这些枚举类在 DateUtil 和 DateTime 相关方法中作为参数使用，可以更大限度的缩小参数限定范围。</p><p>这些定义的枚举值可以通过 <code>getValue()</code> 方法获得其与 Calendar 类对应的 int 值，通过 <code>of(int)</code> 方法从 Calendar 中 int 值转为枚举对象。</p><p>与 Calendar 对应的枚举：</p><ul><li><code>Month</code> 表示月份，与 Calendar 中的 int 值<code>一一对应</code></li><li><code>Week</code> 表示周，与 Calendar 中的 int 值<code>一一对应</code></li></ul>',13)]))}const r=t(i,[["render",c],["__file","2-Hutool_Core.html.vue"]]),s=JSON.parse('{"path":"/docs/Java/Hutool/2_Hutool_Core/2-Hutool_Core.html","title":"Hutool-Core核心（二）","lang":"en-US","frontmatter":{"title":"Hutool-Core核心（二）","date":"2024/12/18"},"headers":[{"level":2,"title":"日期和时间","slug":"日期和时间","link":"#日期和时间","children":[]},{"level":2,"title":"① 概述","slug":"_1-概述","link":"#_1-概述","children":[{"level":3,"title":"1 介绍","slug":"_1-介绍","link":"#_1-介绍","children":[]},{"level":3,"title":"2 日期时间工具","slug":"_2-日期时间工具","link":"#_2-日期时间工具","children":[]},{"level":3,"title":"3 日期枚举","slug":"_3-日期枚举","link":"#_3-日期枚举","children":[]}]}],"filePathRelative":"docs/Java/Hutool/2_Hutool_Core/2-Hutool_Core.md","git":{"createdTime":1734515917000,"updatedTime":1734515917000,"contributors":[{"name":"lixuan","username":"lixuan","email":"2789968443@qq.com","commits":1,"url":"https://github.com/lixuan"}]}}');export{r as comp,s as data};
