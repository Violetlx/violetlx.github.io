import{_ as t,c as e,b as i,o}from"./app-D5ZtcBfG.js";const p={};function a(r,l){return o(),e("div",null,l[0]||(l[0]=[i('<p><img src="https://bizhi1.com/wp-content/uploads/2024/08/silhouette-starry-sky-desktop-wallpaper-small.jpg" alt="星空桌面壁纸"></p><h2 id="工具类" tabindex="-1"><a class="header-anchor" href="#工具类"><span>工具类</span></a></h2><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>① 概述</p><p>② 字符串工具-StrUtil</p><p>③ 16进制工具-HexUtil</p><p>④ Escape工具-EscapeUtil</p><p>⑤ Hash算法-HashUtil</p><p>⑥ URL工具-URLUtil</p><p>⑦ XML工具-XmlUtil</p><p>⑧对象工具-ObjectUtil</p><p>⑨ 反射工具-ReflectUtil</p><p>⑩ 泛型类型工具-TypeUtil</p><p>⑪ 分页工具-PageUtil</p><p>⑫ 剪贴板工具-ClipboardUtil</p><p>⑬ 类工具-ClassUtil</p><p>⑭ 枚举工具-EnumUtil</p><p>⑮ 命令行工具-RuntimeUtil</p><p>⑯ 数字工具-NumberUtil</p><p>⑰ 数组工具-ArrayUtil</p><p>⑱ 随机工具-RandomUtil</p><p>⑲ 唯一ID工具-IdUtil</p><p>⑳ 压缩工具-ZipUtil</p><p>㉑ 引用工具-ReferenceUtil</p><p>㉒ 正则工具-ReUtil</p><p>㉓ 身份证工具-IdcardUtil</p><p>㉔ 信息脱敏工具-DesensitizedUtil</p><p>㉕ 社会信用代码工具-CreditCodeUtil</p><p>㉖ SPI加载工具-ServiceLoaderUtil</p><p>㉗ 字符编码工具-CharseUtil</p><p>㉘ 类加载工具-ClassLoaderUtil</p></div><h2 id="_7-xml工具-xmlutil" tabindex="-1"><a class="header-anchor" href="#_7-xml工具-xmlutil"><span>⑦ XML工具-XmlUtil</span></a></h2><h3 id="_1-由来" tabindex="-1"><a class="header-anchor" href="#_1-由来"><span>1 由来</span></a></h3><p>在日常编码中，我们接触的最多的除了 JSON 外，就是 XML 格式了，一般而言，我们首先想到的是引入 <code>Dom4j</code> 包，却不知 JDK 已经封装有 XML 解析和构建工具：w3c dom 。但是由于这个 API 操作比较比较繁琐，因此 Hutool 中提供了 XmlUtil 简化 XML 的创建、读和写的过程。</p><h3 id="_2-使用" tabindex="-1"><a class="header-anchor" href="#_2-使用"><span>2 使用</span></a></h3><p><strong>① 读取 XML</strong></p><p>读取 XML 分为两个方法：</p><ul><li><code>XmlUtil.readXML</code> 读取 XML 文件</li><li><code>XmlUtil.parseXml</code> 解析 XML 字符串为 Document 对象</li></ul><p><strong>② 写 XML</strong></p><ul><li><code>XmlUtil.toStr</code> 将 XML 文档换为 String</li><li><code>XmlUtil.toFile</code> 将 XML 文档写入到文件</li></ul><p><strong>③ 创建 XML</strong></p><ul><li>XmlUtil.createXml 创建 XML 文档，创建的 XML 默认是 utf8 编码，修改编码的过程是在 toStr 和 toFile 方法里，即 XML 在转为文本的时候才定义编码。</li></ul><p><strong>④ XML 操作</strong></p><p>通过以下工具方法，可以完成基本的结点读取操作。</p><ul><li><code>XmlUtil.cleanInvalid</code> 去除XML文本中的无效字符</li><li><code>XmlUtil.getElements</code> 根据节点名获得子节点列表</li><li><code>XmlUtil.getElement</code> 根据节点名获得第一个子节点</li><li><code>XmlUtil.elementText</code> 根据节点名获得第一个子节点的文本值</li><li><code>XmlUtil.transElements</code> 将NodeList转换为Element列表</li></ul>',17)]))}const s=t(p,[["render",a],["__file","7-Hutool_Core.html.vue"]]),c=JSON.parse('{"path":"/docs/Java/Hutool/2_Hutool_Core/7-Hutool_Core.html","title":"Hutool-Core核心（七）","lang":"en-US","frontmatter":{"title":"Hutool-Core核心（七）","date":"2024/12/25"},"headers":[{"level":2,"title":"工具类","slug":"工具类","link":"#工具类","children":[]},{"level":2,"title":"⑦ XML工具-XmlUtil","slug":"_7-xml工具-xmlutil","link":"#_7-xml工具-xmlutil","children":[{"level":3,"title":"1 由来","slug":"_1-由来","link":"#_1-由来","children":[]},{"level":3,"title":"2 使用","slug":"_2-使用","link":"#_2-使用","children":[]}]}],"filePathRelative":"docs/Java/Hutool/2_Hutool_Core/7-Hutool_Core.md","git":{"createdTime":1735284834000,"updatedTime":1735284834000,"contributors":[{"name":"lixuan","username":"lixuan","email":"2789968443@qq.com","commits":1,"url":"https://github.com/lixuan"}]}}');export{s as comp,c as data};
