import{_ as n,c as s,b as i,a as l,d as e,e as r,r as p,o as d}from"./app-BY1XJ_0O.js";const a="/assets/1653837988985-DmoMoh_h.png",g="/assets/1653838053608-BldFM8i7.png",u={},m={href:"https://juejin.cn/post/6844903785744056333#heading-0",target:"_blank",rel:"noopener noreferrer"};function L(x,t){const o=p("ExternalLinkIcon");return d(),s("div",null,[t[10]||(t[10]=i('<p><img src="https://bizhi1.com/wp-content/uploads/2024/11/宁静-女孩-小船-竹排-湖水-唯美动漫4K高清壁纸3840x2160.jpg" alt="宁静 女孩 小船 竹排 湖水 唯美动漫4K高清壁纸"></p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>① HyperLogLog</p><p>② 测试百万数据的统计</p></div><h2 id="_1-hyperloglog" tabindex="-1"><a class="header-anchor" href="#_1-hyperloglog"><span>① HyperLogLog</span></a></h2><p>首先我们搞懂两个概念：</p><ul><li>UV：全称Unique Visitor，也叫独立访客量，是指通过互联网访问、浏览这个网页的自然人。1天内同一个用户多次访问该网站，只记录1次。</li><li>PV：全称Page View，也叫页面访问量或点击量，用户每访问网站的一个页面，记录1次PV，用户多次打开页面，则记录多次PV。往往用来衡量网站的流量。</li></ul><p>通常来说UV会比PV大很多，所以衡量同一个网站的访问量，我们需要综合考虑很多因素，所以我们只是单纯的把这两个值作为一个参考值</p><p>UV统计在服务端做会比较麻烦，因为要判断该用户是否已经统计过了，需要将统计过的用户信息保存。但是如果每个访问的用户都保存到Redis中，数据量会非常恐怖，那怎么处理呢？</p>',7)),l("p",null,[t[1]||(t[1]=e("Hyperloglog(HLL)是从Loglog算法派生的概率算法，用于确定非常大的集合的基数，而不需要存储其所有值。相关算法原理大家可以参考：")),l("a",m,[t[0]||(t[0]=e("https://juejin.cn/post/6844903785744056333#heading-0")),r(o)]),t[2]||(t[2]=l("br",null,null,-1)),t[3]||(t[3]=e(" Redis中的HLL是基于string结构实现的，单个HLL的内存")),t[4]||(t[4]=l("strong",null,"永远小于16kb",-1)),t[5]||(t[5]=e("，")),t[6]||(t[6]=l("strong",null,"内存占用低",-1)),t[7]||(t[7]=e("的令人发指！作为代价，其测量结果是概率性的，")),t[8]||(t[8]=l("strong",null,"有小于0.81％的误差",-1)),t[9]||(t[9]=e("。不过对于UV统计来说，这完全可以忽略。"))]),t[11]||(t[11]=l("p",null,[l("img",{src:a,alt:"1653837988985"})],-1)),t[12]||(t[12]=l("h2",{id:"_2-测试百万数据的统计",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_2-测试百万数据的统计"},[l("span",null,"② 测试百万数据的统计")])],-1)),t[13]||(t[13]=l("p",null,"测试思路：我们直接利用单元测试，向HyperLogLog中添加100万条数据，看看内存占用和统计效果如何",-1)),t[14]||(t[14]=l("p",null,[l("img",{src:g,alt:"1653838053608"})],-1)),t[15]||(t[15]=l("p",null,"经过测试：我们会发生他的误差是在允许范围内，并且内存占用极小",-1))])}const k=n(u,[["render",L]]),w=JSON.parse('{"path":"/docs/Middleware/Redis/Redis_Heima/2_Redis_Actual/13-Redis_Actual.html","title":"UV统计","lang":"en-US","frontmatter":{"title":"UV统计","date":"2025/06/19"},"headers":[{"level":2,"title":"① HyperLogLog","slug":"_1-hyperloglog","link":"#_1-hyperloglog","children":[]},{"level":2,"title":"② 测试百万数据的统计","slug":"_2-测试百万数据的统计","link":"#_2-测试百万数据的统计","children":[]}],"filePathRelative":"docs/Middleware/Redis/Redis_Heima/2_Redis_Actual/13-Redis_Actual.md","git":{"createdTime":1750319780000,"updatedTime":1750319780000,"contributors":[{"name":"lixuan","email":"2789968443@qq.com","commits":1}]}}');export{k as comp,w as data};
