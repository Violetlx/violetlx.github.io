import{_ as a,c as t,b as n,o as p}from"./app-C7pp65Rl.js";const l="/assets/image-20220905141526319-BCotXrqa.png",i="/assets/image-20220905142216835-BGYexVlD.png",e="/assets/image-20220905143549718-CyqCgEPx.png",m="/assets/image-20220905154404574-Cgw-nsVZ.png",r="/assets/image-20220905145416951-DyWEbttq.png",c={};function o(h,s){return p(),t("div",null,s[0]||(s[0]=[n('<p><img src="https://bizhi1.com/wp-content/uploads/2024/06/one-piece-shanks-with-two-swords-desktop-wallpaper-small.jpg" alt="海贼王 双剑 香克斯 桌面壁纸"></p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><ul><li>多处理机硬件结构</li><li>多处理Cache一致性</li><li>多处理机同步机制</li><li>多处理机并行算法运算</li></ul></div><p><em>多处理机值得是有两台以上的处理机，共享I/O子系统，机器间共享主存或高速网络通信，在统一操作系统控制下，协同处理复杂任务。与阵列机对比，多处理机是在作业或者是任务级别的并行处理，向量机则是指令操作级的并行</em></p><h2 id="多处理机硬件结构" tabindex="-1"><a class="header-anchor" href="#多处理机硬件结构"><span><strong>多处理机硬件结构</strong></span></a></h2><p><strong>主存结构：</strong></p><ol><li><p>紧耦合（通过共享主存实现处理机之间通讯）</p><blockquote><ul><li>降低存储器和互联网络的带宽需求</li><li>对本地存储器的访问延迟小</li><li>处理器之间通信复杂，处理器之间访问延迟大</li></ul></blockquote></li><li><p>松耦合</p><blockquote><p>每台处理机都有一个<strong>容量较大的局部存储器</strong>，用于存储经常用的指令和数据，以<strong>减少紧耦合系统中存在的访主存冲突</strong>。不同处理机间或者通过<strong>通道互连</strong>实现通信，以共享某些外围设备；或者通过消息传送系统来交换信息</p></blockquote></li></ol><p><strong>机间互连方式：</strong></p><ol><li>总线（多处理机的存储器，外围设备通过接口与总线连接，设备占用总线较高）</li><li>环形互连（消息通过环形网络传递，到达发送点为止，结点传递之间存在延迟）</li><li>交叉开关形式</li><li>多端口存储器（端口转发数据）</li><li>蠕虫穿洞寻径网络（虚拟网络通道）</li><li>开关枢纽结构形式</li></ol><p><strong>存储方式：</strong></p><ol><li>高址交叉</li><li>低址交叉</li></ol><blockquote><hr><p><strong>存储器存储方式</strong></p><ul><li><p>共享全局地址空间（具有统一逻辑地址）</p></li><li><p>分布式独立地址空间（不同结点地址独立，处理单元只能对本存储空间进行访问）</p></li><li><p>NUMA机器(分布式独立地址)</p><blockquote><p><img src="'+l+'" alt="images/7-Architecture/image-20220905141526319.png"></p></blockquote></li></ul><p><strong>存储器通信机制</strong></p><ul><li><p>共享存储器通信(共享地址)</p><blockquote><p><em>处理器之间通过load和store指令对相同存储器进行读写操作</em></p></blockquote></li><li><p>消息传递通信</p><blockquote><p>处理器显式传递消息（处理器之间发送接收数据停下通信，不经过存储器）</p></blockquote></li></ul><blockquote><p>RPC远程进程调用</p></blockquote><p><img src="'+i+'" alt="images/7-Architecture/image-20220905142216835.png"></p><p><strong>共享存储器通信优点</strong></p><ul><li>常用对称式处理器</li><li>易于编程，简化编译器设计</li><li>通过基于<strong>内存模型开发应用程序</strong></li><li>通信数据量小，带宽利用高</li><li>可以采用Cache计数减少通信延迟和数据共享访问冲突</li></ul><hr><p><strong>消息传递通信机制优点</strong></p><ul><li><p>硬件实现简单</p></li><li><p>显示通信，注重通信开销，易于开发性能高的并行程序</p></li><li><p>基于同步通信方式，减少并发带来的错误</p></li></ul><p><em>在共享存储器上支持消息传递简单，消息传递机器上支持共享存储器比较困难</em></p></blockquote><h2 id="多处理机cache一致性" tabindex="-1"><a class="header-anchor" href="#多处理机cache一致性"><span><strong>多处理机Cache一致性</strong></span></a></h2><p><em>对称式共享存储器多个处理器共享一个存储器</em></p><p><img src="'+e+'" alt="images/7-Architecture/image-20220905143549718.png"></p><p><strong>存储系统行为分析：</strong></p><ul><li>what ： 读操作得到是什么值</li><li>when ： 什么时候将值返回给读操作</li></ul><p><strong>Cache一致性协议</strong>（跟踪共享数据块的状态）</p><ul><li><p><strong>监听式协议（MSI)</strong></p><blockquote><p>CPU进行读操作时，先把请求放入总线上广播，判断其他Cache上是否含有目标数据，目标数据包含Cache共享状态信息 ，在进行相应操作。</p><p><strong>处理器写更新操作</strong></p><ul><li>写作废（对数据写操作时，保证处理器对该数据有唯一的访问权，作废其他Cache中副本）</li><li>写更新（通过总线广播所有Cache对该项数据副本进行更新）</li></ul><p><em>在对一项数据多次写而无读情况下，写更新操作性能开销大，在存在多核写读情况下，写更新存在延迟较少</em></p><hr><p><strong>存储器写策略</strong></p><ul><li>写直达（同时更新所有Cache和内存中值，性能低）</li><li>写回（仅把数据写回Cache中，存在cache与主存数据不一致）</li></ul><p><strong>采用写直达作废的Snoop：</strong>（<strong>写入内存和Cache，同时在通知总线作废其他Cache</strong>）</p><p><strong>采用写回作废的Snoopy：</strong></p><blockquote><p><img src="'+m+'" alt="images/7-Architecture/image-20220905154404574.png"></p><p><strong>Cache块中有三种状态</strong></p><ul><li>无效I</li><li>共享S（<strong>内存与Cache值一致</strong>）</li><li>已修改M (Cache已修改，未写回存储器)</li></ul><p><strong>总线事件</strong></p><ul><li>RdMiss ：读不命中</li><li>WtMiss：写不命中</li><li>Invalidate：通知其他处理器作废其Cache中相应副本（不从内存中调块）</li></ul><p>Snoopy中Cache状态变化</p><ol><li>读缺失（从内存中装入Cache,并修改状态为S，其他处理器读入Cache，不会此Cache状态)</li><li>其他处理器写（此Cache状态变为I）</li><li>此处理器写（将Cache状态变为M，<strong>此处理器读，写操作不会更改此Cache状态</strong>，<strong>其他处理器写该Cache，需要将此Cache状态变为I，将其他Cache中状态变为I，并写回存储器，其他处理器进行读，需要将此Cache状态变为S，并写回内存</strong>）</li></ol></blockquote></blockquote></li><li><p><strong>目录式协议（directory)</strong></p><blockquote><p><img src="'+r+'" alt="images/7-Architecture/image-20220905145416951.png"></p></blockquote></li></ul><h2 id="多处理机同步机制" tabindex="-1"><a class="header-anchor" href="#多处理机同步机制"><span><strong>多处理机同步机制</strong></span></a></h2><p><strong>硬件原语</strong>（一组已原子操作的方式读出并修改存储单元的指令）</p><ul><li><p><strong>原子交换</strong>（将存储单元的值与寄存器的值进行交换）</p></li><li><p><strong>测试并置定</strong>（测试存储单元的值，符合条件则修改其值)</p></li><li><p><strong>读取并加1</strong>（返回存储单元的值并自动增加该值）</p></li><li><p><strong>LI与SC</strong> （特殊取指令与特殊存指令，实际就是自旋判断修改）</p></li></ul><h2 id="多处理机并行算法运算" tabindex="-1"><a class="header-anchor" href="#多处理机并行算法运算"><span><strong>多处理机并行算法运算</strong></span></a></h2><p>P：表示可并行处理的处理机数</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">T_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>：表示P台处理机运算级数（树高）</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">S_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>：多台处理机加速比 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>p</mi></msub><mo>=</mo><mfrac><msub><mi>T</mi><mn>1</mn></msub><msub><mi>T</mi><mi>p</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">S_p=\\frac{T_1}{T_p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4308em;vertical-align:-0.5423em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">E_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>：设备利用率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>p</mi></msub><mo>=</mo><mfrac><msub><mi>S</mi><mi>p</mi></msub><mi>P</mi></mfrac></mrow><annotation encoding="application/x-tex">E_p = \\frac{S_p}{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3307em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9857em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5073em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>',26)]))}const u=a(c,[["render",o]]),d=JSON.parse('{"path":"/docs/Computer/Computer/3_Architecture/7-Architecture.html","title":"多处理机","lang":"en-US","frontmatter":{"title":"多处理机","date":"2025/07/04"},"headers":[{"level":2,"title":"多处理机硬件结构","slug":"多处理机硬件结构","link":"#多处理机硬件结构","children":[]},{"level":2,"title":"多处理机Cache一致性","slug":"多处理机cache一致性","link":"#多处理机cache一致性","children":[]},{"level":2,"title":"多处理机同步机制","slug":"多处理机同步机制","link":"#多处理机同步机制","children":[]},{"level":2,"title":"多处理机并行算法运算","slug":"多处理机并行算法运算","link":"#多处理机并行算法运算","children":[]}],"filePathRelative":"docs/Computer/Computer/3_Architecture/7-Architecture.md","git":{"createdTime":1751621258000,"updatedTime":1751621258000,"contributors":[{"name":"lixuan","email":"2789968443@qq.com","commits":1}]}}');export{u as comp,d as data};
